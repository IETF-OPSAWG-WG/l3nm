<?xml version="1.0" encoding="US-ASCII"?>
<!-- edited with XMLSPY v5 rel. 3 U (http://www.xmlspy.com)
     by Daniel M Kohn (private) -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!ENTITY rfc2119 PUBLIC "" "http://xml.resource.org/public/rfc/bibxml/reference.RFC.2119.xml">
]>
<rfc category="std" docName="draft-ietf-opsawg-yang-vpn-service-pm-01"
     ipr="trust200902">
  <?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>

  <?rfc toc="yes" ?>

  <?rfc symrefs="yes" ?>

  <?rfc sortrefs="yes"?>

  <?rfc iprnotified="no" ?>

  <?rfc strict="yes" ?>

  <front>
    <title abbrev="Network and VPN Service PM YANG">A YANG Model for Network
    and VPN Service Performance Monitoring</title>

    <author fullname="Bo Wu" initials="B." role="editor" surname="Wu">
      <organization>Huawei</organization>

      <address>
        <postal>
          <street>101 Software Avenue, Yuhua District</street>

          <city>Nanjing</city>

          <region>Jiangsu</region>

          <code>210012</code>

          <country>China</country>
        </postal>

        <email>lana.wubo@huawei.com</email>
      </address>
    </author>

    <author fullname="Qin Wu" initials="Q." role="editor" surname="Wu">
      <organization>Huawei</organization>

      <address>
        <postal>
          <street>101 Software Avenue, Yuhua District</street>

          <city>Nanjing</city>

          <region>Jiangsu</region>

          <code>210012</code>

          <country>China</country>
        </postal>

        <email>bill.wu@huawei.com</email>
      </address>
    </author>

    <author fullname="Mohamed Boucadair" initials="M." role="editor"
            surname="Boucadair">
      <organization>Orange</organization>

      <address>
        <postal>
          <street>Rennes 35000</street>

          <country>France</country>
        </postal>

        <email>mohamed.boucadair@orange.com</email>
      </address>
    </author>

    <author fullname="Oscar Gonzalez de Dios" initials="O."
            surname="Gonzalez de Dios">
      <organization>Telefonica</organization>

      <address>
        <postal>
          <street></street>

          <city>Madrid</city>

          <country>ES</country>
        </postal>

        <email>oscar.gonzalezdedios@telefonica.com</email>
      </address>
    </author>

    <author fullname="Bin Wen" initials="B" surname="Wen">
      <organization>Comcast</organization>

      <address>
        <email>bin_wen@comcast.com</email>
      </address>
    </author>

    <author fullname="Change Liu" initials="C" surname="Liu">
      <organization>China Unicom</organization>

      <address>
        <email>liuc131@chinaunicom.cn</email>
      </address>
    </author>

    <author fullname="Honglei Xu" initials="H." surname="Xu">
      <organization>China Telecom</organization>

      <address>
        <email>xuhl.bri@chinatelecom.cn</email>
      </address>
    </author>

    <date year="2021" />

    <area>OPS Area</area>

    <workgroup>OPSAWG Working Group</workgroup>

    <keyword>RFC</keyword>

    <keyword>Request for Comments</keyword>

    <keyword>Internet-Draft</keyword>

    <keyword>VPN Performance Measurement Telemetry</keyword>

    <abstract>
      <t>The data model defined in RFC 8345 introduces vertical layering
      relationships between networks that can be augmented to cover network
      and service topologies. This document defines a YANG module for both
      network performance monitoring (PM) and VPN service performance
      monitoring that can be used to monitor and manage network performance on
      the topology at higher layer or the service topology between VPN
      sites.</t>

      <t>The YANG model defined in this document is designed as an
      augmentation to the network topology YANG model defined in RFC 8345 and
      draws on relevant YANG types defined in RFC 6991, RFC 8299, RFC 8345,
      and RFC 8532. </t>
    </abstract>
  </front>

  <middle>
    <section anchor="intro" title="Introduction">
      <t><xref target="RFC8969"></xref> describes a framework for automating
      service and network management with YANG models, proposing the
      performance measurement telemetry model to be tied with the service,
      such as Layer 3 VPN and Layer 2 VPN, or network models to monitor the
      overall network performance or Service Level Agreements (SLA).</t>

      <t>This document defines a YANG module <xref target="RFC7950"></xref>
      for both network performance monitoring and VPN service performance
      monitoring. This module can be used to monitor and manage network
      performance on the topology level or the service topology between VPN
      sites, in particular.</t>

      <t>This document does not introduce new metrics for network performance
      or mechanisms for measuring network performance, but uses the existing
      mechanisms and statistics to show the performance monitoring statistics
      at the network and service layers. The YANG module defined in this
      document is designed as an augmentation to the network topology YANG
      model defined in <xref target="RFC8345"></xref>.</t>

      <t>This document uses the common VPN YANG module defined in <xref
      target="I-D.ietf-opsawg-vpn-common"></xref>.</t>

      <t><xref target="examples"></xref> provides a set of examples to
      illustrate the use of the module.</t>
    </section>

    <section title="Terminology">
      <t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
      "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
      "OPTIONAL" in this document are to be interpreted as described in BCP 14
      <xref target="RFC2119"></xref><xref target="RFC8174"></xref> when, and
      only when, they appear in all capitals, as shown here.</t>

      <t>Tree diagrams used in this document follow the notation defined in
      <xref target="RFC8340"></xref>.</t>
    </section>

    <section title="Network and VPN Service Performance Monitoring Model Usage">
      <t>Models are key for automating network management operations.
      According to <xref target="RFC8969"></xref>, together with service and
      network models, performance measurement telemetry models are needed to
      monitor network performance to meet specific service requirements
      (typically captured in an SLA). The YANG module defined in this document
      is designed to derive VPN or network level performance data based on
      lower-level data collected via monitoring counters of the involved
      devices.</t>

      <figure anchor="fig1" title="Reference Architecture">
        <artwork><![CDATA[                            +---------------+
                            |   Customer    |
                            +-------+-------+
                                    |
            Customer Service Models |
                                    |
                            +-------+---------+
                            |    Service      |
                            |  Orchestration  |
                            +------+-+--------+
                                   | |
            Network Service Models | | Network and VPN Service PM Models
                                   | |
                            +------+-+--------+
                            |     Network     |
                            |   Controller    |
                            +-------+---------+
                                    |
            +-----------------------+------------------------+
                                  Network
]]></artwork>
      </figure>

      <t>As shown in <xref target="fig1"></xref>, in the context of layering
      model architecture described in <xref target="RFC8309"></xref>, the
      network and VPN service performance monitoring (PM) model can be used to
      expose some performance information to the above layer. Such an
      information can be used by an orchestrator to subscribe to performance
      data. The network controller will then notify the orchestrator about
      corresponding parameter changes.</t>

      <t>Before using the network and VPN service PM model, the mapping
      between the VPN service topology and the underlying physical network
      should be setup. Also, the performance monitoring data per link in the
      underlying network can be collected using network performance
      measurement method such as MPLS Loss and Delay Measurement <xref
      target="RFC6374"></xref>.</t>

      <t>The performance monitoring information reflecting the quality of the
      network or VPN service (e.g., end to end network performance data
      between source node and destination node in the network or between VPN
      sites) can be computed and aggregated, for example, the information from
      Traffic Engineering Database (TED), defined in <xref
      target="RFC7471"></xref>, <xref target="RFC8570"></xref>, or <xref
      target="RFC8571"></xref> or LMAP <xref target="RFC8194"></xref>.</t>

      <t>The measurement and report intervals that are associated with these
      performance data usually depend on the configuration parameters.</t>

      <section title="Collecting Data via Pub/Sub Mechanism">
        <t>Some applications such as service-assurance applications, which
        must maintain a continuous view of operational data and state, can use
        the subscription model <xref target="RFC8641"></xref> to subscribe to
        the specific network performance data or VPN service performance data
        they are interested in, at the data source.</t>

        <t>The data source can, then, use the network and VPN service
        assurance model defined in this document and the YANG Push model <xref
        target="RFC8641"></xref> to distribute specific telemetry data to
        target recipients.</t>
      </section>

      <section title="Collecting Data via Retrieval Methods">
        <t>To obtain a snapshot of a large amount of performance data from a
        network element (including network controllers), service-assurance
        applications may use methods such as retrieving performance data or
        RPC commands defined as part of YANG models.</t>
      </section>
    </section>

    <section title="Description of The Data Model">
      <t>This document defines the YANG module, "ietf-network-vpn-pm", which
      is an augmentation to the "ietf-network" and
      "ietf-network-topology".</t>

      <t>The performance monitoring data augments the service topology as
      shown in <xref target="aug"></xref>.</t>

      <figure anchor="aug" title="Module Augmentation">
        <artwork><![CDATA[+----------------------+          +-----------------------+
|ietf-network          |          |Network and VPN Service|
|ietf-network-topology |<---------|Performance Monitoring |
+----------------------+ augments |        Model          |
                                  +-----------------------+]]></artwork>
      </figure>

      <section anchor="layering"
               title="Layering Relationship between Multiple Layers of Topology">
        <t><xref target="RFC8345"></xref> defines a YANG data model for
        network/service topologies and inventories. The service topology
        described in <xref target="RFC8345"></xref> includes the virtual
        topology for a service layer above Layer 1 (L1), Layer 2 (L2), and
        Layer 3 (L3). This service topology has the generic topology elements
        of node, link, and terminating point. One typical example of a service
        topology is described in Figure 3 of <xref target="RFC8345"></xref>:
        two VPN service topologies instantiated over a common L3 topology.
        Each VPN service topology is mapped onto a subset of nodes from the
        common L3 topology.</t>

        <t><xref target="fig3"></xref> illustrates an example of a topology
        that maps between the VPN service topology and an underlying
        network:</t>

        <figure align="center" anchor="fig3"
                title="Example of Topology Mapping Between VPN Service Topology and Underlying Network">
          <artwork><![CDATA[                     VPN 1                       VPN 2
          +-----------------------+    +---------------------+
         /S1C-[VN3]...           /    /S2A              S2B /
        /      /  \   :::::     /    / -[VN1]______[VN3]-  /
       /      /    \       :   /    /   :            :    /
      /      /      \  S1A  :: : : : : :             :   /
     /S1B-[VN2]____[VN1]--   /    /   : :            :  /
    +--------:-------:------+    +---:----:----------:-+
             :        :       :: : :       :         :
             :         :    :              :         :
   Site-1A   :  +-------:--: ----- -------- : -------:-----+ Site-1C
     [CE1]___: /__ ___ [N1]__________________ [N2]__ :___ /__[CE3]
             :/      /  / \             _____/ /    :    /
   [CE5]___  : ___  /  /    \     _____/      /   ::    /
 Site-2A    /:        /       \  /           /   :     /
           / :                [N5]          /   :     /
          /   :     /       __/ \__        /   :     /
         /     :   /    ___/       \__    /   :     /
Site-1B /       : / ___/              \  /   :     /  Site-2B
 [CE2]-/------- [N4]_________________ [N3]:::-----/----[CE4]
      +------------------------------------------+

    Legend: N:node  VN:VPN-Node                   

]]></artwork>
        </figure>

        <t>As shown in <xref target="fig3"></xref>, two VPN services
        topologies are both built on top of one common underlying physical
        network:<list style="hanging">
            <t hangText="VPN 1: ">This service topology supports hub-spoke
            communications for 'customer 1' connecting the customer's access
            at three sites: 'Site-1A', 'Site-1B', and 'Site-1C'. These sites
            are connected to nodes that are mapped to node 1 (N1), node 2
            (N2), and node 4 (N4) in the underlying physical network.
            'Site-1A' plays the role of hub while 'Site-1B' and 'Site-1C' are
            configured as spoke.</t>

            <t hangText="VPN 2: ">This service supports any-to-any
            communications for 'customer 2' connecting the customer's access
            at two sites: 'Site-2A' and 'Site-2B'. These sites are connected
            to nodes that are mapped to nodes 1 (N1) and node 3 (N3)5 in the
            underlying physical network. 'Site-2A' and 'Site-2B' have
            'any-to-any' role.</t>
          </list></t>

        <t></t>
      </section>

      <section title="Network Level">
        <t>For network performance monitoring, the container of "ietf-network"
        do not need to be extended.</t>

        <t>For VPN service performance monitoring, the container
        "service-type" is defined to indicate the VPN type, e.g., L3VPN or
        Virtual Private LAN Service (VPLS). The values are taken from <xref
        target="I-D.ietf-opsawg-vpn-common"></xref>. When a network topology
        instance contains the L3VPN or other L2VPN network type, it represents
        a VPN instance that can perform performance monitoring.</t>

        <t>This model defines the following set of network level
        attributes:<list style="hanging">
            <t hangText="&quot;vpn-id&quot;:">Refers to an identifier of VPN
            service defined in <xref
            target="I-D.ietf-opsawg-vpn-common"></xref>). This identifier is
            used to correlate the performance status with the network service
            configuration.</t>

            <t hangText="&quot;vpn-service-topology&quot;:">Indicates the type
            of VPN topology. This model supports "any-to-any", "Hub and Spoke"
            (where Hubs can exchange traffic), and "Hub and Spoke disjoint"
            (where Hubs cannot exchange traffic) that are taken from <xref
            target="I-D.ietf-opsawg-vpn-common"></xref>. These VPN topology
            types can be used to describe how VPN sites communicate with each
            other.</t>
          </list></t>

        <t><figure anchor="ntree"
            title="Network Level View of the Hierarchies">
            <artwork><![CDATA[module: ietf-network-vpn-pm
  augment /nw:networks/nw:network/nw:network-types:
    +--rw service-type!
       +--rw service-type?   identityref
  augment /nw:networks/nw:network:
    +--rw vpn-pm-attributes
       +--rw vpn-id?                 vpn-common:vpn-id
       +--rw vpn-service-topology?   identityref
]]></artwork>
          </figure></t>
      </section>

      <section title="Node Level">
        <t>For network performance monitoring, the attributes of "Node Level"
        that are defined in [RFC8345] do not need to be extended.</t>

        <t>For VPN service performance monitoring, this model defines only the
        following minimal set of Node level network topology attributes:</t>

        <t><list style="hanging">
            <t hangText="&quot;node-type&quot;:">Indicates the type of the
            node, such as Provider Edge (PE) or Autonomous System Border
            Router (ASBR). This "node-type" can be used to report performance
            metric between any two nodes each with specific node-type.</t>

            <t hangText="&quot;role&quot;:">Defines the role in a particular
            VPN service topology. The roles are taken from <xref
            target="I-D.ietf-opsawg-vpn-common"></xref> (e.g.,
            any-to-any-role, spoke-role, hub-role).</t>

            <t hangText="&quot;vpn-summary-statistics&quot;:">Lists a set of
            IPv4 statistics, IPv6 statistics, and MAC statistics. These
            statistics are specified separately.</t>
          </list></t>

        <t><figure anchor="nodetree"
            title="Node Level View of the Hierarchies">
            <artwork><![CDATA[  augment /nw:networks/nw:network/nw:node:
    +--rw pm-attributes
       +--rw node-type?                identityref
       +--rw role?                     identityref
       +--ro vpn-summary-statistics
          +--ro ipv4
          |  +--ro maximum-routes?        uint32
          |  +--ro total-active-routes?   uint32
          +--ro ipv6
          |  +--ro maximum-routes?        uint32
          |  +--ro total-active-routes?   uint32
          +--ro mac-num
             +--ro mac-num-limit?          uint32
             +--ro total-active-mac-num?   uint32
]]></artwork>
          </figure></t>

        <t></t>
      </section>

      <section title="Link and Termination Point Level">
        <t>The 'links' are classified into two types: topology link defined in
        <xref target="RFC8345"></xref> and abstract link of a VPN between
        PEs.</t>

        <t>The performance data of a link is a collection of counters that
        report the performance status. The data for the topology link can be
        based, e.g., on BGP-LS <xref target="RFC8571"></xref>. The statistics
        of the VPN abstract links can be collected based upon VPN OAM
        mechanisms, e.g., Two-way Active Measurement Protocol (TWAMP) <xref
        target="RFC5357"></xref>. Alternatively, the data can be based upon
        the underlay technology OAM mechanisms, for example, GRE tunnel
        OAM.</t>

        <t>The customer sites are connected to the 'vpn-network-accesses'.
        </t>

        <t><figure anchor="ltree"
            title="Link and Termination point Level View of the hierarchies">
            <artwork><![CDATA[  augment /nw:networks/nw:network/nt:link:
    +--rw pm-attributes
       +--rw low-percentile?         percentile
       +--rw middle-percentile?      percentile
       +--rw high-percentile?        percentile
       +--ro pm-source?              string
       +--ro reference-time?         yang:date-and-time
       +--ro measurement-interval?   uint32
       +--ro pm-statistics
       |  +--ro loss-statistics
       |  |  +--ro packet-loss-count?          yang:counter64
       |  |  +--ro packet-reorder-count?       yang:counter64
       |  |  +--ro packets-out-of-seq-count?   yang:counter64
       |  |  +--ro packets-dup-count?          yang:counter64
       |  |  +--ro loss-ratio?                 percentage
       |  +--ro delay-statistics
       |  |  +--ro direction?                 identityref
       |  |  +--ro unit-value?                identityref
       |  |  +--ro min-delay-value?           yang:gauge64
       |  |  +--ro max-delay-value?           yang:gauge64
       |  |  +--ro low-delay-percentile?      yang:gauge64
       |  |  +--ro middle-delay-percentile?   yang:gauge64
       |  |  +--ro high-delay-percentile?     yang:gauge64
       |  +--ro jitter-statistics
       |     +--ro unit-value?                 identityref
       |     +--ro min-jitter-value?           yang:gauge32
       |     +--ro max-jitter-value?           yang:gauge32
       |     +--ro low-jitter-percentile?      yang:gauge32
       |     +--ro middle-jitter-percentile?   yang:gauge32
       |     +--ro high-jitter-percentile?     yang:gauge32
       +--ro protocol-type?          identityref
  augment /nw:networks/nw:network/nw:node/nt:termination-point:
    +--ro pm-statistics
       +--ro inbound-octets?             yang:counter64
       +--ro inbound-unicast?            yang:counter64
       +--ro inbound-nunicast?           yang:counter64
       +--ro inbound-discards?           yang:counter32
       +--ro inbound-errors?             yang:counter64
       +--ro inbound-unknown-protocol?   yang:counter64
       +--ro outbound-octets?            yang:counter64
       +--ro outbound-unicast?           yang:counter64
       +--ro outbound-nunicast?          yang:counter64
       +--ro outbound-discards?          yang:counter64
       +--ro outbound-errors?            yang:counter64]]></artwork>
          </figure></t>

        <t>For the data nodes of 'link' depicted in <xref
        target="ltree"></xref>, the YANG module defines the following minimal
        set of link-level performance attributes:<list style="hanging">
            <t hangText="Percentile parameters:">The module supports reporting
            delay and jitter metric by percentile values. By default, low
            percentile (10th percentile), mid percentile (50th percentile),
            high percentile (90th percentile) are used. Setting a percentile
            into 0.00 indicates the client is not interested in receiving
            particular percentile. If all percentile nodes are set to 0.00,
            this represents that no percentile related nodes will be reported
            for a given performance metric (e.g. one-way delay, one-way delay
            variation) and only peak/min values will be reported. For example,
            a client can inform the server that it is interested in receiving
            only high percentiles. Then for a given link, at a given
            "reference-time" &ldquo;measurement-interval", the
            'high-delay-percentile' and 'high-jitter-percentile' will be
            reported. An example to illustrate the use of percentiles is
            provided in <xref target="perc"></xref>.</t>

            <t hangText="Loss Statistics:">A set of loss statistics attributes
            that are used to measure end to end loss between VPN sites or
            between any two network nodes. The exact loss value or the loss
            percentage can be reported.</t>

            <t hangText="Delay Statistics:">A set of delay statistics
            attributes that are used to measure end to end latency between VPN
            sites or between any two network nodes. The peak/min values or
            percentile values can be reported.</t>

            <t hangText="Jitter Statistics: ">A set of IP Packet Delay
            Variation <xref target="RFC3393"></xref> statistics attributes
            that are used to measure end to end jitter between VPN sites or
            between any two network nodes. The peak/min values or percentile
            values can be reported.</t>

            <t hangText="&quot;protocol-type&quot;:">Indicates the abstract
            link protocol-type of a VPN, such as GRE or IP-in-IP. The leaf
            refers to an identifier of the "underlay-transport" defined in
            <xref target="I-D.ietf-opsawg-vpn-common"></xref>, which describes
            the transport technology to carry the traffic of the VPN
            service.</t>
          </list></t>

        <t>For the data nodes of 'termination-point' depicted in<xref
        target="ltree"></xref>, the module defines the following minimal set
        of statistics: <list style="hanging">
            <t hangText="Inbound statistics:">A set of inbound statistics
            attributes that are used to measure the inbound statistics of the
            termination point, such as received packets, received packets with
            errors, etc.</t>

            <t hangText="Outbound statistics:">A set of outbound statistics
            attributes that are used to measure the outbound statistics of the
            termination point, such as sent packets, packets that could not be
            sent due to errors, etc.</t>
          </list></t>
      </section>
    </section>

    <section title="Network and VPN Service Performance Monitoring YANG Module">
      <t>The "ietf-network-vpn-pm" module uses types defined in <xref
      target="RFC8345"></xref>, <xref target="RFC6991"></xref>, and <xref
      target="RFC8532"></xref>.</t>

      <figure>
        <artwork><![CDATA[<CODE BEGINS> file "ietf-network-vpn-pm@2021-07-05.yang"
module ietf-network-vpn-pm {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-network-vpn-pm";
  prefix nvp;

  import ietf-yang-types {
    prefix yang;
    reference
      "RFC 6991: Common YANG Types";
  }
  import ietf-vpn-common {
    prefix vpn-common;
    reference
      "RFC CCCC: A Layer 2/3 VPN Common YANG Model";
  }
  import ietf-network {
    prefix nw;
    reference
      "RFC 8345: A YANG Data Model for Network
                 Topologies, Section 6.1";
  }
  import ietf-network-topology {
    prefix nt;
    reference
      "RFC 8345: A YANG Data Model for Network
                 Topologies, Section 6.2";
  }
  import ietf-lime-time-types {
    prefix lime;
    reference
      "RFC 8532: Generic YANG Data Model for the Management of
                 Operations, Administration, and Maintenance 
                 (OAM) Protocols That Use Connectionless Communications";
  }

  organization
    "IETF OPSAWG Working Group";
  contact
    "Editor: Qin Wu
             <bill.wu@huawei.com>
     Editor: Bo Wu
             <lana.wubo@huawei.com>
     Editor: Mohamed Boucadair
             <mohamed.boucadair@orange.com>";
  description
    "This module defines a model for Network and VPN Service Performance
     monitoring.

     Copyright (c) 2021 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject
     to the license terms contained in, the Simplified BSD License
     set forth in Section 4.c of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (http://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX; see
     the RFC itself for full legal notices.";

  revision 2021-07-05 {
    description
      "Initial revision.";
    reference
      "RFC XXXX: A YANG Model for Network and VPN Service Performance
                 Monitoring";
  }

  identity node-type {
    description
      "Base identity for node type";
  }

  identity pe {
    base node-type;
    description
      "Identity for Provider Edge (PE) type.";
  }

  identity asbr {
    base node-type;
    description
      "Identity for Autonomous System Border Router (ASBR) type.";
  }

  identity p {
    base node-type;
    description
      "Identity for P type.";
  }

  identity direction {
    description
      "Base identity for measurement direction including
       one-way measurement and two-way measurement.";
  }

  identity one-way {
    base direction;
    description
      "Identity for one-way measurement.";
  }

  identity two-way {
    base direction;
    description
      "Identity for two-way measurement.";
  }

  typedef percentage {
    type decimal64 {
      fraction-digits 5;
      range "0..100";
    }
    description
      "Percentage.";
  }

  typedef percentile {
    type decimal64 {
      fraction-digits 5;
    }
    description
      "The percentile is a statistical value that indicates that a
       certain percentage of a set of data falls below it.";
  }

  grouping vpn-summary-statistics {
    description
      "VPN Statistics grouping used for network topology
       augmentation.";
    container vpn-summary-statistics {
      config false;
      description
        "Container for VPN summary statistics.";
      container ipv4 {
        leaf maximum-routes {
          type uint32;
          description
            "Total routes for the VPN.";
        }
        leaf total-active-routes {
          type uint32;
          description
            "Total active routes for the VPN.";
        }
        description
          "IPv4-specific parameters.";
      }
      container ipv6 {
        leaf maximum-routes {
          type uint32;
          description
            "Total routes for the VPN.";
        }
        leaf total-active-routes {
          type uint32;
          description
            "Total active routes for the VPN.";
        }
        description
          "IPv6-specific parameters.";
      }
      container mac-num {
        leaf mac-num-limit {
          type uint32;
          description
            "Maximum number of MAC addresses.";
        }
        leaf total-active-mac-num {
          type uint32;
          description
            "Total active MAC entries for the VPN.";
        }
        description
          "MAC statistics.";
      }
    }
  }

  grouping link-error-statistics {
    description
      "Grouping for per link error statistics.";
    container loss-statistics {
      description
        "Per link loss statistics.";
      leaf packet-loss-count {
        type yang:counter64;
        description
          "Total received packet drops count.";
      }
      leaf packet-reorder-count {
        type yang:counter64;
        description
          "Total received packet reordered count.";
      }
      leaf packets-out-of-seq-count {
        type yang:counter64;
        description
          "Total received out of sequence count.";
      }
      leaf packets-dup-count {
        type yang:counter64;
        description
          "Total received packet duplicates count.";
      }
      leaf loss-ratio {
        type percentage;
        description
          "Loss ratio of the packets. Express as percentage
           of packets lost with respect to packets sent.";
      }
    }
  }

  grouping link-delay-statistics {
    description
      "Grouping for per link delay statistics";
    container delay-statistics {
      description
        "Link delay summarised information. By default,
         one way measurement protocol (e.g., OWAMP) is used
         to measure delay.";
      leaf direction {
        type identityref {
          base direction;
        }
        default "one-way";
        description
          "Define measurement direction including one way
           measurement and two way measurement.";
      }
      leaf unit-value {
        type identityref {
          base lime:time-unit-type;
        }
        default "lime:milliseconds";
        description
          "Time units, where the options are s, ms, ns, etc.";
      }
      leaf min-delay-value {
        type yang:gauge64;
        description
          "Minimum delay value observed.";
      }
      leaf max-delay-value {
        type yang:gauge64;
        description
          "Maximum delay value observed.";
      }
      leaf low-delay-percentile {
        type yang:gauge64;
        description
          "Low percentile of the delay observed with
           specific measurement method.";
      }
      leaf middle-delay-percentile {
        type yang:gauge64;
        description
          "Middle percentile of the delay observed with
           specific measurement method.";
      }
      leaf high-delay-percentile {
        type yang:gauge64;
        description
          "High percentile of the delay observed with
           specific measurement method.";
      }
    }
  }

  grouping link-jitter-statistics {
    description
      "Grouping for per link jitter statistics";
    container jitter-statistics {
      description
        "Link jitter summarised information. By default,
         jitter is measured using IP Packet Delay Variation
         (IPDV).";
      leaf unit-value {
        type identityref {
          base lime:time-unit-type;
        }
        default "lime:milliseconds";
        description
          "Time units, where the options are s, ms, ns, etc.";
      }
      leaf min-jitter-value {
        type yang:gauge32;
        description
          "Minimum jitter value observed.";
      }
      leaf max-jitter-value {
        type yang:gauge32;
        description
          "Maximum jitter value observed.";
      }
      leaf low-jitter-percentile {
        type yang:gauge32;
        description
          "Low percentile of the jitter observed.";
      }
      leaf middle-jitter-percentile {
        type yang:gauge32;
        description
          "Middle percentile of the jitter observed.";
      }
      leaf high-jitter-percentile {
        type yang:gauge32;
        description
          "High percentile of the jitter observed.";
      }
    }
  }

  grouping tp-svc-telemetry {
    leaf inbound-octets {
      type yang:counter64;
      description
        "The total number of octets received on the
         interface, including framing characters.";
    }
    leaf inbound-unicast {
      type yang:counter64;
      description
        "Inbound unicast packets were received, and delivered
         to a higher layer during the last period.";
    }
    leaf inbound-nunicast {
      type yang:counter64;
      description
        "The number of non-unicast (i.e., subnetwork-
         broadcast or subnetwork-multicast) packets
         delivered to a higher-layer protocol.";
    }
    leaf inbound-discards {
      type yang:counter32;
      description
        "The number of inbound packets which were chosen
         to be discarded even though no errors had been
         detected to prevent their being deliverable to a
         higher-layer protocol.";
    }
    leaf inbound-errors {
      type yang:counter64;
      description
        "The number of inbound packets that contained
         errors preventing them from being deliverable to a
         higher-layer protocol.";
    }
    leaf inbound-unknown-protocol {
      type yang:counter64;
      description
        "The number of packets received via the interface
         which were discarded because of an unknown or
         unsupported protocol.";
    }
    leaf outbound-octets {
      type yang:counter64;
      description
        "The total number of octets transmitted out of the
         interface, including framing characters.";
    }
    leaf outbound-unicast {
      type yang:counter64;
      description
        "The total number of packets that higher-level
         protocols requested be transmitted to a
         subnetwork-unicast address, including those that
         were discarded or not sent.";
    }
    leaf outbound-nunicast {
      type yang:counter64;
      description
        "The total number of packets that higher-level
         protocols requested be transmitted to a non-
         unicast (i.e., a subnetwork-broadcast or
         subnetwork-multicast) address, including those
         that were discarded or not sent.";
    }
    leaf outbound-discards {
      type yang:counter64;
      description
        "The number of outbound packets which were chosen
         to be discarded even though no errors had been
         detected to prevent their being transmitted.  One
         possible reason for discarding such a packet could
         be to free up buffer space.";
    }
    leaf outbound-errors {
      type yang:counter64;
      description
        "The number of outbound packets that contained
         errors preventing them from being deliverable to a
         higher-layer protocol.";
    }
    description
      "Grouping for interface service telemetry.";
  }

  augment "/nw:networks/nw:network/nw:network-types" {
    description
      "Defines the service topologies types";
    container service-type {
      presence "Indicates Network service topology";
      leaf service-type {
        type identityref {
          base vpn-common:service-type;
        }
        description
          "The presence identifies the network service type,
           e.g., L3VPN, VPLS, etc.";
      }
      description
        "Container for VPN service type.";
    }
  }

  augment "/nw:networks/nw:network" {
    when 'nw:network-types/nvp:service-type' {
      description
        "Augment only for VPN Network topology.";
    }
    description
      "Augment the network with service topology attributes";
    container vpn-pm-attributes {
      leaf vpn-id {
        type vpn-common:vpn-id;
        description
          "VPN identifier.";
      }
      leaf vpn-service-topology {
        type identityref {
          base vpn-common:vpn-topology;
        }
        description
          "VPN service topology, e.g., hub-spoke, any-to-any,
           hub-spoke-disjoint";
      }
      description
        "Container for vpn topology attributes.";
    }
  }

  augment "/nw:networks/nw:network/nw:node" {
    description
      "Augment the network node with other general attributes";
    container pm-attributes {
      leaf node-type {
        type identityref {
          base node-type;
        }
        description
          "Node type, e.g., PE, P, ASBR.";
      }
      description
        "Container for node attributes.";
    }
  }

  augment "/nw:networks/nw:network/nw:node/pm-attributes" {
    when '../../nw:network-types/nvp:service-type' {
      description
        "Augment only for VPN node attributes.";
    }
    description
      "Augment the network node with VPN specific attributes";
    leaf role {
      type identityref {
        base vpn-common:role;
      }
      default "vpn-common:any-to-any-role";
      description
        "Role of the node in the VPN.";
    }
    uses vpn-summary-statistics;
  }

  augment "/nw:networks/nw:network/nt:link" {
    description
      "Augment the network topology link with performance monitoring
       attributes";
    container pm-attributes {
      description
        "Container for PM attributes.";
      leaf low-percentile {
        type percentile;
        default "10.00";
        description
          "Low percentile to report. Setting low-percentile
           into 0.00 indicates the client is not interested in receiving
           low percentile.";
      }
      leaf middle-percentile {
        type percentile;
        default "50.00";
        description
          "Middle percentile to report. Setting middle-percentile
           into 0.00 indicates the client is not interested in receiving
           middle percentile.";
      }
      leaf high-percentile {
        type percentile;
        default "90.00";
        description
          "High percentile to report. Setting high-percentile
           into 0.00 indicates the client is not interested in receiving
           high percentile";
      }
      leaf pm-source {
        config false;
        type string;
        description
          "The OAM tool used to collect the PM data.";
      }
      leaf reference-time {
        config false;
        type yang:date-and-time;
        description
          "The time that the current Measurement Interval started.";
      }
      leaf measurement-interval {
        config false;
        type uint32;
        units "seconds";
        default "60";
        description
          "Interval to calculate performance metric.";
      }
      container pm-statistics {
        config false;
        uses link-error-statistics;
        uses link-delay-statistics;
        uses link-jitter-statistics;
        description
          "Container for service telemetry attributes.";
      }
    }
  }

  augment "/nw:networks/nw:network/nt:link/pm-attributes" {
    when '../../nw:network-types/nvp:service-type' {
      description
        "Augment only for VPN Network topology.";
    }
    description
      "Augment the network topology link with service performance
       monitoring attributes";
    leaf protocol-type {
      config false;
      type identityref {
        base vpn-common:protocol-type;
      }
      description
        "Underlay-transport type, e.g., GRE, LDP, etc.";
    }
  }

  augment "/nw:networks/nw:network/nw:node/nt:termination-point" {
    description
      "Augment the network topology termination point with
       performance monitoring attributes";
    container pm-statistics {
      config false;
      uses tp-svc-telemetry;
      description
        "Container for termination point PM attributes.";
    }
  }
}
<CODE ENDS>]]></artwork>
      </figure>
    </section>

    <section title="Security Considerations">
      <t>The YANG modules defined in this document MAY be accessed via the
      RESTCONF protocol <xref target="RFC8040"></xref> or NETCONF protocol
      <xref target="RFC6241"></xref>. The lowest RESTCONF or NETCONF layer
      requires that the transport-layer protocol provides both data integrity
      and confidentiality, see Section 2 in [RFC8040] and [RFC6241]. The
      lowest NETCONF layer is the secure transport layer, and the
      mandatory-to-implement secure transport is Secure Shell (SSH)[RFC6242] .
      The lowest RESTCONF layer is HTTPS, and the mandatory-to-implement
      secure transport is TLS <xref target="RFC8446"></xref>.</t>

      <t>The NETCONF access control model <xref target="RFC8341"></xref>
      provides the means to restrict access for particular NETCONF or RESTCONF
      users to a preconfigured subset of all available NETCONF or RESTCONF
      protocol operations and content.</t>

      <t>There are a number of data nodes defined in this YANG module that are
      writable/creatable/deletable (i.e., config true, which is the default).
      These data nodes may be considered sensitive or vulnerable in some
      network environments. Write operations (e.g., edit-config) to these data
      nodes without proper protection can have a negative effect on network
      operations. These are the subtrees and data nodes and their
      sensitivity/vulnerability: <list style="symbols">
          <t>/nw:networks/nw:network/svc-topo:svc-telemetry-attributes</t>

          <t>/nw:networks/nw:network/nw:node/svc-topo:node-attributes</t>
        </list></t>
    </section>

    <section title="IANA Considerations">
      <t>This document requests IANA to register the following URI in the "ns"
      subregistry within the "IETF XML Registry" <xref
      target="RFC3688"></xref>:</t>

      <figure>
        <artwork><![CDATA[   URI: urn:ietf:params:xml:ns:yang:ietf-network-vpn-pm
   Registrant Contact: The IESG.
   XML: N/A, the requested URI is an XML namespace.
]]></artwork>
      </figure>

      <t>This document requests IANA to register the following YANG module in
      the "YANG Module Names" subregistry <xref target="RFC6020"></xref>
      within the "YANG Parameters" registry.</t>

      <figure>
        <artwork><![CDATA[   Name:         ietf-network-vpn-pm
   Namespace:    urn:ietf:params:xml:ns:yang:ietf-network-vpn-pm
   Maintained by IANA: N
   Prefix:       nvp
   Reference:    RFC XXXX
]]></artwork>
      </figure>
    </section>

    <section title="Acknowledgements">
      <t>Thanks to Joe Clarke, Adrian Farrel, Greg Mirsky, Roque Gagliano,
      Erez Segev, and Dhruv Dhody for reviewing and providing important input
      to this document.</t>
    </section>

    <section title="Contributors">
      <figure>
        <artwork><![CDATA[   Michale Wang
   Huawei
   Email:wangzitao@huawei.com

   Roni Even
   Huawei
   Email: ron.even.tlv@gmail.com ]]></artwork>
      </figure>
    </section>
  </middle>

  <back>
    <references title="Normative References">
      <?rfc include='reference.RFC.2119'?>

      <?rfc include='reference.I-D.ietf-opsawg-vpn-common'?>

      <?rfc include="reference.RFC.3688"?>

      <?rfc include='reference.RFC.3393'?>

      <?rfc include="reference.RFC.6020"?>

      <?rfc include="reference.RFC.6241"?>

      <?rfc include="reference.RFC.6242"?>

      <?rfc include="reference.RFC.6374"?>

      <?rfc include='reference.RFC.6991'?>

      <?rfc include="reference.RFC.8446"?>

      <?rfc include="reference.RFC.7950"?>

      <?rfc include='reference.RFC.8174'?>

      <?rfc include='reference.RFC.8299'?>

      <?rfc include="reference.RFC.8340"?>

      <?rfc include="reference.RFC.8345"?>

      <?rfc include='reference.RFC.8641'?>

      <?rfc include='reference.RFC.8532'?>
    </references>

    <references title="Informative References">
      <?rfc include='reference.RFC.8969'?>

      <?rfc include="reference.RFC.7471"?>

      <?rfc include="reference.RFC.8570"?>

      <?rfc include='reference.RFC.8040'?>

      <?rfc include='reference.RFC.8309'?>

      <?rfc include='reference.RFC.8194'?>

      <?rfc include='reference.RFC.8341'?>

      <?rfc include="reference.RFC.8571"?>

      <?rfc include='reference.RFC.5357'?>
    </references>

    <section anchor="examples" title="Illustrating Examples">
      <t></t>

      <section title="Example of Pub/Sub Retrieval">
        <t>The example shown in <xref target="ex"></xref> illustrates how a
        client subscribes to the performance monitoring information between
        nodes ('node-id') A and B in the L3 network topology. The performance
        monitoring parameter that the client is interested in is end-to-end
        loss.</t>

        <figure align="center" anchor="ex" title="Pub/Siub Retrieval">
          <artwork><![CDATA[    <rpc netconf:message-id="101"
       xmlns:netconf="urn:ietf:params:xml:ns:netconf:base:1.0">
       <establish-subscription
      xmlns="urn:ietf:params:xml:ns:yang:ietf-subscribed-notifications">
          <stream-subtree-filter>
             <networks 
        xmlns="urn:ietf:params:xml:ns:yang:ietf-network-topo">
                <network>
                 <network-id>l3-network</network-id>
                 <service-type 
      xmlns="urn:ietf:params:xml:ns:yang:ietf-network-vpn-pm">
                    L3VPN
                 </service-type>
                   <node>
                     <node-id>A</node-id>
                     <pm-attributes> 
      xmlns="urn:ietf:params:xml:ns:yang:ietf-network-vpn-pm">
                       <node-type>pe</node-type>
                     </pm-attributes>
                     <termination-point 
      xmlns="urn:ietf:params:xml:ns:yang:ietf-network-topology">
                      <tp-id>1-0-1</tp-id>
                      <pm-statistics 
      xmlns="urn:ietf:params:xml:ns:yang:ietf-network-vpn-pm">
                       <inbound-octets>150</inbound-octets>
                       <outbound-octets>100</outbound-octets>
                      </pm-statistics>
                     </termination-point>
                    </node>
                   <node>
                     <node-id>B</node-id>
                     <pm-attributes>
           xmlns="urn:ietf:params:xml:ns:yang:ietf-network-vpn-pm">
                      <node-type>pe</node-type>
                     </pm-attributes>
                       <termination-point 
           xmlns="urn:ietf:params:xml:ns:yang:ietf-network-topology">
                         <tp-id>2-0-1</tp-id>
                         <pm-statistics 
           xmlns="urn:ietf:params:xml:ns:yang:ietf-network-vpn-pm">
                           <inbound-octets>150</inbound-octets>
                           <outbound-octets>100</outbound-octets>
                         </pm-statistics>
                      </termination-point>
                    </node>
                    <link 
             xmlns="urn:ietf:params:xml:ns:yang:ietf-network-topology">
                     <link-id>A-B</link-id>
                      <source>
                        <source-node>A</source-node>
                      </source>
                      <destination>
                       <dest-node>B</dest-node>
                      </destination>
                      <protocol-type>mpls-te</protocol-type>
                      <pm-attributes
               xmlns="urn:ietf:params:xml:ns:yang:ietf-network-vpn-pm">
                        <loss-statistics>
                         <packet-loss-count>100</packet-loss-count>
                        </loss-statistics>
                      </pm-attributes>
                    </link>
                </network>
              </networks>
           </stream-subtree-filter>
         <period 
           xmlns="urn:ietf:params:xml:ns:yang:ietf-yang-push:1.0">
          500
       </period>
       </establish-subscription>
    </rpc>]]></artwork>
        </figure>
      </section>

      <section title="Example of RPC-based Retrieval">
        <t>This example, depicted in <xref target="ex2"></xref>, illustrates
        how a the client can use the RPC model to fetch performance data on
        demand. For example, the client requests "packet-loss-count" between
        'source-node' A and 'dest-node' B that belong to the same VPN
        ('VPN1').</t>

        <figure align="center" anchor="ex2">
          <artwork><![CDATA[    
 <rpc xmlns="urn:ietf:params:xml:ns:netconf:base:1.0"
        message-id="1">
   <report 
        xmlns="urn:ietf:params:xml:ns:yang:example-service-pm-report">
      <networks xmlns="urn:ietf:params:xml:ns:yang:ietf-network-topo">
        <network>
         <network-id>vpn1</network-id>
         <node>
          <node-id>A</node-id>
          <pm-attributes 
               xmlns="urn:ietf:params:xml:ns:yang:ietf-network-vpn-pm">
            <node-type>pe</node-type>
          </pm-attribtues>
          <termination-point 
             xmlns="urn:ietf:params:xml:ns:yang:ietf-network-topology">
           <tp-id>1-0-1</tp-id>
           <pm-statistics 
              xmlns="urn:ietf:params:xml:ns:yang:ietf-network-vpn-pm">
            <inbound-octets>100</inbound-octets>
            <outbound-octets>150</outbound-octets>
           </pm-statistics>
          </termination-point>  
         </node>
         <node>
          <node-id>B</node-id>
          <pm-attributes 
              xmlns="urn:ietf:params:xml:ns:yang:ietf-network-vpn-pm">
            <node-type>pe</node-type>
          </pm-attribtues>
          <termination-point 
             xmlns="urn:ietf:params:xml:ns:yang:ietf-network-topology">
           <tp-id>2-0-1</tp-id>
           <pm-statistics 
               xmlns="urn:ietf:params:xml:ns:yang:ietf-network-vpn-pm">
            <inbound-octets>150</inbound-octets>
            <outbound-octets>100</outbound-octets>
           </pm-statistics>
          </termination-point>  
         </node>
         <link> 
         <link-id>A-B</link-id>
          <source>
           <source-node>A</source-node>
          </source>
          <destination>
           <dest-node>B</dest-node>
          </destination>
         <-type>mpls-te</link-type>
          <pm-attributes 
             xmlns="urn:ietf:params:xml:ns:yang:ietf-network-pm">
           <loss-statistics>
            <packet-loss-count>120</packet-loss-count>
           </loss-statistics>
          </pm-attributes>
         </link>
       </network>
     </report>
   </rpc> ]]></artwork>
        </figure>
      </section>

      <section anchor="perc" title="Example of Percentile Monitoring">
        <t>The following shows an example of a percentile measurement for a
        VPN link.</t>

        <figure>
          <artwork><![CDATA[{
   "ietf-network-topology:link":[
      {
         "link-id":"vpn1-link1",
         "protocol-type":"gre",
         "source":{
            "source-node":"vpn-node1"
         },
         "destination":{
            "dest-node":"vpn-node3"
         },
         "ietf-network-vpn-pm:delay-statistics":{
            "low-percentile":"20.00",
            "middle-percentile":"50.00",
            "high-percentile":"90.00",
            "pm-statistics:pm-attributes":{
               "direction":"one-way",
               "unit-values":"milliseconds",
               "min-delay-value":"43",
               "max-delay-value":"99",
               "low-delay-percentile":"64",
               "middle-delay-percentile":"77",
               "high-delay-percentile":"98"
            }
         }
      }
   ]
}  ]]></artwork>
        </figure>

        <t></t>
      </section>
    </section>
  </back>
</rfc>
