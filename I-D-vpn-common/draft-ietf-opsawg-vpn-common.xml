<?xml version="1.0" encoding="US-ASCII"?>
<!-- This template is for creating an Internet Draft using xml2rfc,
     which is available here: http://xml.resource.org. -->
<!DOCTYPE rfc SYSTEM "rfc2629.dtd" [
<!-- One method to get references from the online citation libraries.
     There has to be one entity for each item to be referenced. 
     An alternate method (rfc include) is described in the references. -->
]>
<?xml-stylesheet type='text/xsl' href='rfc2629.xslt' ?>
<!-- used by XSLT processors -->
<!-- For a complete list and description of processing instructions (PIs), 
     please see http://xml.resource.org/authoring/README.html. -->
<!-- Below are generally applicable Processing Instructions (PIs) that most I-Ds might want to use.
     (Here they are set differently than their defaults in xml2rfc v1.32) -->
<?rfc strict="yes" ?>
<!-- give errors regarding ID-nits and DTD validation -->
<!-- control the table of contents (ToC) -->
<?rfc toc="yes"?>
<!-- generate a ToC -->
<?rfc tocdepth="4"?>
<!-- the number of levels of subsections in ToC. default: 3 -->
<!-- control references -->
<?rfc symrefs="yes"?>
<!-- use symbolic references tags, i.e, [RFC2119] instead of [1] -->
<?rfc sortrefs="yes" ?>
<!-- sort the reference entries alphabetically -->
<!-- control vertical white space 
     (using these PIs as follows is recommended by the RFC Editor) -->
<?rfc compact="yes" ?>
<!-- do not start each main section on a new page -->
<?rfc subcompact="no" ?>
<!-- keep one blank line between list items -->
<!-- end of list of popular I-D processing instructions -->
<rfc category="std" docName="draft-ietf-opsawg-vpn-common-latest"
     ipr="trust200902">
  <front>
    <title abbrev="VPN Common">A Layer 2/3 VPN Common YANG Model</title>

    <author fullname="Samier Barguil" initials="S." surname="Barguil">
      <organization>Telefonica</organization>

      <address>
        <postal>
          <street></street>

          <city>Madrid</city>

          <region></region>

          <code></code>

          <country>Spain</country>
        </postal>

        <phone></phone>

        <facsimile></facsimile>

        <email>samier.barguilgiraldo.ext@telefonica.com</email>

        <uri></uri>
      </address>
    </author>

    <author fullname="Oscar Gonzalez de Dios" initials="O.G.D" role="editor"
            surname="Gonzalez de Dios">
      <organization>Telefonica</organization>

      <address>
        <postal>
          <street></street>

          <!-- Reorder these if your country does things differently -->

          <city>Madrid</city>

          <region></region>

          <code></code>

          <country>Spain</country>
        </postal>

        <phone></phone>

        <email>oscar.gonzalezdedios@telefonica.com</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>

    <author fullname="Mohamed Boucadair" initials="M.B." role="editor"
            surname="Boucadair">
      <organization>Orange</organization>

      <address>
        <postal>
          <street></street>

          <!-- Reorder these if your country does things differently -->

          <city></city>

          <region></region>

          <code></code>

          <country>France</country>
        </postal>

        <phone></phone>

        <email>mohamed.boucadair@orange.com</email>

        <!-- uri and facsimile elements may also be added -->
      </address>
    </author>

    <author fullname="Qin Wu" initials="Q." surname="Wu">
      <organization>Huawei</organization>

      <address>
        <postal>
          <street>101 Software Avenue, Yuhua District</street>

          <city>Nanjing</city>

          <region>Jiangsu</region>

          <code>210012</code>

          <country>China</country>
        </postal>

        <email>bill.wu@huawei.com</email>
      </address>
    </author>

    <date />

    <workgroup>opsawg</workgroup>

    <abstract>
      <t>This document defines a common YANG module that is meant to be reused
      by various VPN-related modules such as Layer 3 VPN and Layer 2 VPN
      network models.</t>
    </abstract>

    <note title="Editorial Note (To be removed by RFC Editor)">
      <t>Please update these statements within the document with the RFC
      number to be assigned to this document:<list style="symbols">
          <t>"This version of this YANG module is part of RFC XXXX;"</t>

          <t>"RFC XXXX: A Layer 2/3 VPN Common YANG Model";</t>

          <t>reference: RFC XXXX</t>
        </list></t>

      <t>Also, please update the "revision" date of the YANG module.</t>
    </note>
  </front>

  <middle>
    <section anchor="intro" title="Introduction">
      <t>Various VPN-related YANG data modules were specified by the IETF
      (e.g., Layer 3 VPN Service Model (L3SM) <xref target="RFC8299"></xref>
      or Layer 2 VPN Service Model (L2SM) <xref target="RFC8466"></xref>).
      Others are being specified by the IETF (e.g., Layer 3 VPN Network Model
      (L3NM) <xref target="I-D.ietf-opsawg-l3sm-l3nm"></xref> or Layer 2 VPN
      Network Model (L2NM) <xref target="I-D.ietf-opsawg-l2nm"></xref>). These
      modules have data nodes and structures that are present in almost all
      these models or a subset of them. An example of such data nodes is
      depicted in <xref target="ex"></xref>.</t>

      <t><figure align="left" anchor="ex"
          title="Example of Common Data Nodes in Both L2NM/L3NM">
          <artwork><![CDATA[ module: ietf-l2vpn-ntw
    +--rw vpn-services
        +--rw vpn-service* [vpn-id]
              +--rw vpn-id                      svc-id
              +--rw vpn-svc-type?               identityref
              +--rw customer-name?              string
              +--rw svc-topo?                   identityref
              +-rw service-status
              |  +-rw admin
              |  |  +-rw status?      operational-type
              |  |  +-rw timestamp?   yang:date-and-time
              |  +-ro ops
              |     +-ro status?      operational-type
              |     +-ro timestamp?   yang:date-and-time
              |  ...

 module: ietf-l3vpn-ntw
    +--rw vpn-services
        +--rw vpn-service* [vpn-id]
              +-rw service-status
              |  +-rw admin
              |  |  +-rw status?      operational-type
              |  |  +-rw timestamp?   yang:date-and-time
              |  +-ro ops
              |     +-ro status?      operational-type
              |     +-ro timestamp?   yang:date-and-time
              +--rw vpn-id                  l3vpn-svc:svc-id
              +--rw l3sm-vpn-id?            l3vpn-svc:svc-id
              +--rw customer-name?          string
              +--rw vpn-service-topology?   identityref
              +--rw description?            string
              |  ...

]]></artwork>
        </figure>In order to avoid data nodes duplication and to ease passing
      data among layers (i.e., service layer to network layer and vice versa),
      early versions of the L3NM reused many of the data nodes that are
      defined in the L3SM <xref target="RFC8299"></xref>. Nevertheless, that
      approach was abandoned because that design was interpreted as if the
      deployment of L3NM depends on L3SM, while this is not required. For
      example, a service provider may decide to use the L3NM to build its
      L3VPN services without exposing the L3SM to customers.</t>

      <t>Likewise, early versions of the L2NM reused many of the data nodes
      that are defined in both L2SM and L3NM. An example of L3NM groupings
      reused in L2NM is shown in <xref target="ex2"></xref>. Such data nodes
      reuse was interpreted as if the deployment of the L2NM requires the
      support of the L3NM; which is not required.</t>

      <t><figure align="left" anchor="ex2"
          title="Excerpt from the L2NM YANG Module">
          <artwork><![CDATA[module ietf-l2vpn-ntw {
 ...
  import ietf-l3vpn-ntw {
    prefix l3vpn-ntw;
    reference
      "RFC NNNN: A Layer 3 VPN Network YANG Model";
  }
  ...
  container l2vpn-ntw {
    ...
    container vpn-services {
      list vpn-service {
        ...
        uses l3vpn-ntw:service-status;
        uses l3vpn-ntw:svc-transport-encapsulation;
        ...
      }
    }
    ...
  }
}
]]></artwork>
        </figure>To avoid the issues discussed above, this document defines a
      common YANG module that is meant to be reused by various VPN-related
      modules such as L3NM <xref target="I-D.ietf-opsawg-l3sm-l3nm"></xref>
      and L2NM <xref target="I-D.ietf-opsawg-l2nm"></xref>: "ietf-vpn-common"
      (<xref target="module"></xref>).</t>

      <t>The "ietf-vpn-common" module includes a set of identities, types, and
      groupings that are meant to be reused by other VPN-related YANG modules
      independently of their layer (e.g., Layer 2, Layer 3) and the type of
      the module (e.g., network model, service model) including future
      revisions (if any) of existing models (e.g., L3SM <xref
      target="RFC8299"></xref> or L2SM <xref target="RFC8466"></xref>).</t>
    </section>

    <section anchor="terminology" title="Terminology">
      <t>The terminology for describing YANG modules is defined in <xref
      target="RFC7950"></xref>.</t>

      <t>The meaning of the symbols in tree diagrams is defined in <xref
      target="RFC8340"></xref>.</t>
    </section>

    <section title="Description of the VPN Common YANG Module">
      <t>The "ietf-vpn-common" module defines a set of common VPN-related
      features (e.g., encapsulation features such as <xref
      target="RFC7348">Virtual eXtensible Local Area Network (VXLAN) </xref>,
      multicast <xref target="RFC6513"></xref>, or routing features such as
      OSPF <xref target="RFC4577"></xref> or Bidirectional Forwarding
      Detection (BFD) <xref target="RFC5880"></xref>). Also, the module
      defines a set of identities, e.g.:<list style="hanging">
          <t hangText="'service-type':">Used to identify the VPN service type.
          Examples of supported service types are L3VPN, Virtual Private LAN
          Service (VPLS) using BGP <xref target="RFC4761"></xref><xref
          target="RFC4762">, VPLS using Label Distribution Protocol (LDP)
          </xref><xref target="RFC8214">, Virtual Private Wire Service
          (VPWS)</xref><xref target="RFC7432">, BGP MPLS-Based Ethernet VPN
          </xref><xref target="RFC8365">, Ethernet VPN (EVPN) </xref>, and
          <xref target="RFC7623">Provider Backbone Bridging Combined with
          Ethernet VPN (PBB-EVPN)</xref>.</t>

          <t hangText="'vpn-signaling-type':">Used to identify the signalling
          mode used for a given service type. Examples of supported VPN
          signaling types are L2VPNs using BGP <xref
          target="RFC6624"></xref><xref target="RFC5036">, LDP signalling
          </xref><xref target="RFC3931">, and Layer Two Tunneling Protocol
          (L2TP)</xref>.</t>
        </list></t>

      <t>The module supports a rich set of protocol identifiers that can be
      used, e.g., to refer to an underlay transport. Examples of supported
      protocols are IP-in-IP <xref target="RFC2003"></xref><xref
      target="RFC2473"></xref>, GRE <xref target="RFC1701"></xref><xref
      target="RFC1702"></xref><xref target="RFC7676"></xref>, MPLS-in-UDP
      <xref target="RFC7510"></xref>, Generic Network Virtualization
      Encapsulation (GENEVE) <xref target="RFC8926"></xref>, Segment Routing
      (SR) <xref target="RFC8660"></xref><xref target="RFC8663"></xref><xref
      target="RFC8754"></xref>, SR-TE <xref target="RFC8426"></xref>, and
      Resource ReSerVation Protocol (RSVP) with traffic engineering extensions
      <xref target="RFC3209"></xref>.</t>

      <t>The reader should refer to <xref target="module"></xref> for the full
      list of supported identities (identities related to address families,
      VPN topologies, network access types, operational and administrative
      status, site or node roles, VPN service constraints, routing protocols,
      routes imports and exports, bandwidth and QoS, etc.).</t>

      <t>The "ietf-vpn-common" module also contains a set of reusable
      VPN-related groupings. The tree diagram of the "ietf-vpn-common" module
      that depicts the common groupings is provided in <xref
      target="ctree"></xref>.</t>

      <t><figure align="left" anchor="ctree" title="VPN Common Tree">
          <artwork align="left"><![CDATA[module: ietf-vpn-common

  grouping vpn-description
    +-- vpn-id?            vpn-id
    +-- vpn-name?          string
    +-- vpn-description?   string
    +-- customer-name?     string
  grouping vpn-profile-cfg
    +-- valid-provider-identifiers
       +-- external-connectivity-identifier* [id]
       |       {external-connectivity}?
       |  +-- id?   string
       +-- encryption-profile-identifier* [id]
       |  +-- id?   string
       +-- qos-profile-identifier* [id]
       |  +-- id?   string
       +-- bfd-profile-identifier* [id]
       |  +-- id?   string
       +-- forwarding-profile-identifier* [id]
       |  +-- id?   string
       +-- routing-profile-identifier* [id]
          +-- id?   string
  grouping status-timestamp
    +--ro status?         identityref
    +--ro last-updated?   yang:date-and-time
  grouping service-status
    +-- status
       +-- admin-status
       |  +-- status?         identityref
       |  +-- last-updated?   yang:date-and-time
       +-- oper-status
          +--ro status?         identityref
          +--ro last-updated?   yang:date-and-time
  grouping svc-transport-encapsulation
    +-- underlay-transport
       +-- type*   identityref
  grouping rt-rd
    ...
  grouping vpn-route-targets
    +-- vpn-target* [id]
    |  +-- id?                  int8
    |  +-- route-targets* [route-target]
    |  |  +-- route-target?   rt-types:route-target
    |  +-- route-target-type    rt-types:route-target-type
    +-- vpn-policies
       +-- import-policy?   string
       +-- export-policy?   string
  grouping vpn-components-group
    +-- groups
       +-- group* [group-id]
          +-- group-id?   string
  grouping placement-constraints
    +-- constraint* [constraint-type]
       +-- constraint-type?   identityref
       +-- target
          +-- (target-flavor)?
             +--:(id)
             |  +-- group* [group-id]
             |     +-- group-id?   string
             +--:(all-accesses)
             |  +-- all-other-accesses?   empty
             +--:(all-groups)
                +-- all-other-groups?     empty
  grouping ports
    ...
  grouping qos-classification-policy
    ...
]]></artwork>
        </figure></t>

      <t>The description of the common groupings is provided below: </t>

      <t><list style="hanging">
          <t hangText="'vpn-description':"><list style="none">
              <t>A YANG grouping that provides common administrative VPN
              information such as a name, a textual description, and a
              customer name.</t>
            </list></t>

          <t hangText="'vpn-profile-cfg':"><list style="none">
              <t>A YANG grouping that defines a set of profiles (encryption,
              routing, forwarding, etc.) valid for any Layer 2/3 VPN. This
              document does not make any assumption about the structure of
              such profiles, but allows to "glue" a VPN service with other
              parameters that can be required locally to provide added value
              features to requesting customers. <vspace blankLines="1" />For
              example, a service provider may provide an external connectivity
              to a VPN customer (e.g., to a private or public cloud,
              Internet). Such service may involve tweaking filtering and NAT
              rules (e.g., bind a Virtual Routing and Forwarding (VRF)
              interface with a NAT instance as discussed in Section 2.10 of
              <xref target="RFC8512"></xref>). These added value features may
              be bound to all or a subset of network accesses. Some of these
              added value features may be implemented in other nodes than PEs
              (e.g., a P node or event a dedicated node that hosts the NAT
              function). <vspace blankLines="1" />It is out of the scope of
              this document to elaborate the structure of these profiles.</t>
            </list></t>

          <t hangText="'status-timestamp':"><list style="none">
              <t>A YANG grouping that defines the operational status updates
              of a VPN service component.</t>
            </list></t>

          <t hangText="'service-status':"><list style="none">
              <t>A YANG grouping that defines the administrative and
              operational status of a component. The grouping can be applied
              to the whole service or an endpoint.</t>
            </list></t>

          <t hangText="'svc-transport-encapsulation':"><list style="none">
              <t>A YANG grouping that defines the type of the underlay
              transport for a VPN service.</t>
            </list></t>

          <t hangText="'rt-rd': "><list style="none">
              <t>A YANG grouping that defines the set of route targets,
              defined as Route targets (RTs) and Route Distinguishers (RDs),
              to match for import and export routes to/from a Virtual Routing
              and Forwarding (VRF). As depicted in <xref
              target="rtrd"></xref>, the module supports these modes: direct
              assignment, automatic assignment from a given pool, automatic
              assignment, no assignment. <figure align="center" anchor="rtrd"
                  title="'rt-rd' Grouping Subtree">
                  <artwork align="center"><![CDATA[  grouping rt-rd
    +-- (rd-choice)?
    |  +--:(directly-assigned)
    |  |  +-- rd?             rt-types:route-distinguisher
    |  +--:(pool-assigned)
    |  |  +-- rd-pool-name?   string
    |  |  +--ro rd-from-pool?   rt-types:route-distinguisher
    |  +--:(full-autoasigned)
    |  |  +-- auto?           empty
    |  |  +--ro rd-auto?        rt-types:route-distinguisher
    |  +--:(no-rd)
    |     +-- no-rd?          empty
    +-- vpn-targets
       +-- vpn-target* [id]
       |  +-- id?                  int8
       |  +-- route-targets* [route-target]
       |  |  +-- route-target?   rt-types:route-target
       |  +-- route-target-type    rt-types:route-target-type
       +-- vpn-policies
          +-- import-policy?   string
          +-- export-policy?   string
]]></artwork>
                </figure></t>
            </list></t>

          <t hangText="'vpn-route-targets':"><list style="none">
              <t>A YANG grouping that defines RT import-export rules used in a
              BGP-enabled VPN (e.g., <xref target="RFC4364"></xref><xref
              target="RFC4664"></xref>).</t>
            </list></t>

          <t hangText="'vpn-components-group':"><list style="none">
              <t>A YANG grouping that is used to group VPN nodes, VPN network
              accesses, or sites. For example, diversity or redundancy
              constraints can be applied on a per group basis.</t>
            </list></t>

          <t hangText="'placement-constraints':"><list style="none">
              <t>A YANG grouping that is used to define the placement
              constraints of a VPN node, VPN network access, or site.</t>
            </list></t>

          <t hangText="'ports': "><list style="none">
              <t>A YANG grouping that defines ranges of source and destination
              port numbers and operators. The subtree of this grouping is
              depicted in <xref target="ports"></xref>.<figure align="center"
                  anchor="ports" title="Ports Grouping Subtree">
                  <artwork align="center"><![CDATA[  grouping ports
    +-- (source-port)?
    |  +--:(source-port-range-or-operator)
    |     +-- source-port-range-or-operator
    |        +-- (port-range-or-operator)?
    |           +--:(range)
    |           |  +-- lower-port    inet:port-number
    |           |  +-- upper-port    inet:port-number
    |           +--:(operator)
    |              +-- operator?     operator
    |              +-- port          inet:port-number
    +-- (destination-port)?
       +--:(destination-port-range-or-operator)
          +-- destination-port-range-or-operator
             +-- (port-range-or-operator)?
                +--:(range)
                |  +-- lower-port    inet:port-number
                |  +-- upper-port    inet:port-number
                +--:(operator)
                   +-- operator?     operator
                   +-- port          inet:port-number
]]></artwork>
                </figure></t>
            </list></t>

          <t hangText="'qos-classification-policy':"><list style="none">
              <t>A YANG grouping that defines a set of Quality of Service
              (QoS) classification policies based on various match Layer 3/4
              criteria. The subtree of this grouping is depicted in <xref
              target="qos"></xref>.<figure align="center" anchor="qos"
                  title="QoS Classification Subtree">
                  <artwork align="center"><![CDATA[  grouping qos-classification-policy
    +-- rule* [id]
       +-- id?                        string
       +-- (match-type)?
       |  +--:(match-flow)
       |  |  +-- (l3)?
       |  |  |  +--:(ipv4)
       |  |  |  |  +-- ipv4
       |  |  |  |     +-- dscp?                             inet:dscp
       |  |  |  |     +-- ecn?                              uint8
       |  |  |  |     +-- length?                           uint16
       |  |  |  |     +-- ttl?                              uint8
       |  |  |  |     +-- protocol?                         uint8
       |  |  |  |     +-- ihl?                              uint8
       |  |  |  |     +-- flags?                            bits
       |  |  |  |     +-- offset?                           uint16
       |  |  |  |     +-- identification?                   uint16
       |  |  |  |     +-- (destination-network)?
       |  |  |  |     |  +--:(destination-ipv4-network)
       |  |  |  |     |     +-- destination-ipv4-network?
       |  |  |  |     |             inet:ipv4-prefix
       |  |  |  |     +-- (source-network)?
       |  |  |  |        +--:(source-ipv4-network)
       |  |  |  |           +-- source-ipv4-network?
       |  |  |  |                   inet:ipv4-prefix
       |  |  |  +--:(ipv6)
       |  |  |     +-- ipv6
       |  |  |        +-- dscp?                             inet:dscp
       |  |  |        +-- ecn?                              uint8
       |  |  |        +-- length?                           uint16
       |  |  |        +-- ttl?                              uint8
       |  |  |        +-- protocol?                         uint8
       |  |  |        +-- (destination-network)?
       |  |  |        |  +--:(destination-ipv6-network)
       |  |  |        |     +-- destination-ipv6-network?
       |  |  |        |             inet:ipv6-prefix
       |  |  |        +-- (source-network)?
       |  |  |        |  +--:(source-ipv6-network)
       |  |  |        |     +-- source-ipv6-network?
       |  |  |        |             inet:ipv6-prefix
       |  |  |        +-- flow-label?
       |  |  |                inet:ipv6-flow-label
       |  |  +-- (l4)?
       |  |     +--:(tcp)
       |  |     |  +-- tcp
       |  |     |     +-- sequence-number?
       |  |     |     |       uint32
       |  |     |     +-- acknowledgement-number?
       |  |     |     |       uint32
       |  |     |     +-- data-offset?
       |  |     |     |       uint8
       |  |     |     +-- reserved?
       |  |     |     |       uint8
       |  |     |     +-- flags?
       |  |     |     |       bits
       |  |     |     +-- window-size?
       |  |     |     |       uint16
       |  |     |     +-- urgent-pointer?
       |  |     |     |       uint16
       |  |     |     +-- options?
       |  |     |     |       binary
       |  |     |     +-- (source-port)?
       |  |     |     |  +--:(source-port-range-or-operator)
       |  |     |     |     +-- source-port-range-or-operator
       |  |     |     |        +-- (port-range-or-operator)?
       |  |     |     |           +--:(range)
       |  |     |     |           |  +-- lower-port
       |  |     |     |           |  |       inet:port-number
       |  |     |     |           |  +-- upper-port
       |  |     |     |           |          inet:port-number
       |  |     |     |           +--:(operator)
       |  |     |     |              +-- operator?     operator
       |  |     |     |              +-- port
       |  |     |     |                      inet:port-number
       |  |     |     +-- (destination-port)?
       |  |     |        +--:(destination-port-range-or-operator)
       |  |     |           +-- destination-port-range-or-operator
       |  |     |              +-- (port-range-or-operator)?
       |  |     |                 +--:(range)
       |  |     |                 |  +-- lower-port
       |  |     |                 |  |       inet:port-number
       |  |     |                 |  +-- upper-port
       |  |     |                 |          inet:port-number
       |  |     |                 +--:(operator)
       |  |     |                    +-- operator?     operator
       |  |     |                    +-- port
       |  |     |                            inet:port-number
       |  |     +--:(udp)
       |  |        +-- udp
       |  |           +-- length?
       |  |           |       uint16
       |  |           +-- (source-port)?
       |  |           |  +--:(source-port-range-or-operator)
       |  |           |     +-- source-port-range-or-operator
       |  |           |        +-- (port-range-or-operator)?
       |  |           |           +--:(range)
       |  |           |           |  +-- lower-port
       |  |           |           |  |       inet:port-number
       |  |           |           |  +-- upper-port
       |  |           |           |          inet:port-number
       |  |           |           +--:(operator)
       |  |           |              +-- operator?     operator
       |  |           |              +-- port
       |  |           |                      inet:port-number
       |  |           +-- (destination-port)?
       |  |              +--:(destination-port-range-or-operator)
       |  |                 +-- destination-port-range-or-operator
       |  |                    +-- (port-range-or-operator)?
       |  |                       +--:(range)
       |  |                       |  +-- lower-port
       |  |                       |  |       inet:port-number
       |  |                       |  +-- upper-port
       |  |                       |          inet:port-number
       |  |                       +--:(operator)
       |  |                          +-- operator?     operator
       |  |                          +-- port
       |  |                                  inet:port-number
       |  +--:(match-application)
       |     +-- match-application?   identityref
       +-- target-class-id?           string {qos}?
]]></artwork>
                </figure></t>
            </list></t>
        </list></t>

      <t></t>
    </section>

    <section anchor="module" title="Layer 2/3 VPN Common Module">
      <t>This module uses types defined in <xref target="RFC6991"></xref>,
      <xref target="RFC8294"></xref>, and <xref target="RFC8519"></xref>.</t>

      <t><figure>
          <artwork><![CDATA[<CODE BEGINS>  file "ietf-vpn-common@2021-01-26.yang"
module ietf-vpn-common {
  yang-version 1.1;
  namespace "urn:ietf:params:xml:ns:yang:ietf-vpn-common";
  prefix vpn-common;

  import ietf-netconf-acm {
    prefix nacm;
    reference
      "RFC 8341: Network Configuration Access Control Model";
  }
  import ietf-routing-types {
    prefix rt-types;
    reference
      "RFC 8294: Common YANG Data Types for the Routing Area";
  }
  import ietf-yang-types {
    prefix yang;
    reference
      "Section 3 of RFC 6991";
  }
  import ietf-packet-fields {
    prefix packet-fields;
    reference
      "RFC 8519: YANG Data Model for Network Access
                 Control Lists (ACLs)";
  }

  organization
    "IETF OPSA (Operations and Management Area) Working Group";
  contact
    "WG Web:   <https://datatracker.ietf.org/wg/opsawg/>
     WG List:  <mailto:opsawg@ietf.org>

     Author:  Samier Barguil
              <mailto:samier.barguilgiraldo.ext@telefonica.com>
     Author:  Oscar Gonzalez de Dios
              <mailto:oscar.gonzalezdedios@telefonica.com>
     Editor:  Mohamed Boucadair
              <mailto:mohamed.boucadair@orange.com>
     Author:  Qin Wu
              <mailto:bill.wu@huawei.com>";
  description
    "This YANG module defines a common module that is meant
     to be reused by various VPN-related modules (e.g.,
     Layer 3 VPN Service Model (L3SM), Layer 2 VPN Service
     Model (L2SM), Layer 3 VPN Network Model (L3NM), Layer 2
     VPN Network Model (L2NM)).

     Copyright (c) 2021 IETF Trust and the persons identified as
     authors of the code.  All rights reserved.

     Redistribution and use in source and binary forms, with or
     without modification, is permitted pursuant to, and subject to
     the license terms contained in, the Simplified BSD License set
     forth in Section 4 of the IETF Trust's Legal Provisions
     Relating to IETF Documents
     (https://trustee.ietf.org/license-info).

     This version of this YANG module is part of RFC XXXX
     (https://www.rfc-editor.org/info/rfcXXXX); see the RFC itself
     for full legal notices.";

  revision 2021-01-26 {
    description
      "Initial revision.";
    reference
      "RFC XXXX: A Layer 2/3 VPN Common YANG Model";
  }

  /******** Collection of VPN-related Features ********/
  /* 
   * Features related to encapsulation schemes 
   */

  feature dot1q {
    description
      "Indicates the support of the 'dot1q' encapsulation.";
    reference
      "IEEE Std 802.1Q: Bridges and Bridged Networks";
  }

  feature qinq {
    description
      "Indicates the support of the 'qinq' encapsulation.";
    reference
      "IEEE Std 802.1ad: Provider Bridges";
  }

  feature vxlan {
    description
      "Indicates the support of the Virtual eXtensible
       Local Area Network (VXLAN) encapsulation.";
    reference
      "RFC 7348: Virtual eXtensible Local Area  Network (VXLAN):
                 A Framework for Overlaying Virtualized Layer 2
                 Networks over Layer 3 Networks";
  }

  feature qinany {
    description
      "Indicates the support of the 'qinany' encapsulation.";
  }

  feature lag-interface {
    description
      "Indicates the support of Link Aggregation Group (LAG)
       between VPN network accesses.";
  }

  /*
   * Features related to multicast and address family types  
   */

  feature multicast {
    description
      "Indicates multicast capabilities support in a VPN.";
    reference
      "RFC 6513: Multicast in MPLS/BGP IP VPNs";
  }

  feature ipv4 {
    description
      "Indicates IPv4 support in a VPN.";
  }

  feature ipv6 {
    description
      "Indicates IPv6 support in a VPN.";
  }

  /* 
   * Features related to routing protocols 
   */

  feature rtg-ospf {
    description
      "Indicates support of the OSPF as the Provider Edge (PE)/
       Customer Edge (CE) routing protocol.";
    reference
      "RFC 4577: OSPF as the Provider/Customer Edge Protocol
                 for BGP/MPLS IP Virtual Private Networks(VPNs)";
  }

  feature rtg-ospf-sham-link {
    description
      "Indicates support of OSPF sham links.";
    reference
      "Section 4.2.7 of RFC 4577";
  }

  feature rtg-bgp {
    description
      "Indicates support of BGP as the PE/CE routing protocol.";
  }

  feature rtg-rip {
    description
      "Indicates support of RIP as the PE/CE routing protocol.";
  }

  feature rtg-vrrp {
    description
      "Indicates support of the Virtual Router Redundancy
       Protocol (VRRP) between a cutsomer LAN and the PE.";
  }

  feature rtg-isis {
    description
      "Indicates support of IS-IS as the PE/CE routing
       protocol.";
  }

  feature bfd {
    description
      "Indicates support of Bidirectional Forwarding Detection
       (BFD) between the CE and the PE.";
    reference
      "RFC 5880: Bidirectional Forwarding Detection (BFD)";
  }

  /* 
   * Features related to VPN service constraints 
   */

  feature bearer-reference {
    description
      "Indicates support of the bearer reference access
       constraint. That is, the reuse of a network connection
       that was already ordered to the service provider apart
       from the IP VPN site.";
  }

  feature placement-diversity {
    description
      "Indicates support of placement diversity
       constraints in the customer premises. An example
       of these constraints may be to avoid connecting
       a site network access to the same Provider
       Edge as a target site network access.";
  }

  /* 
   * Features related to Quality of Service (QoS) 
   */

  feature qos {
    description
      "Indicates support of Classes of Services (CoSes).";
  }

  feature input-bw {
    description
      "Indicates support of the input bandwidth in a VPN.";
  }

  feature output-bw {
    description
      "Indicates support of the output bandwidth in a VPN.";
  }

  /* 
   * Features related to security and resilience 
   */

  feature encryption {
    description
      "Indicates support of encryption.";
  }

  feature fast-reroute {
    description
      "Indicates support of Fast Reroute (FRR).";
  }

  /* 
   * Features related to advanced VPN options
   */

  feature external-connectivity {
    description
      "Indicates support of the VPN to provide external
       connectivity (e.g., Internet, private or public cloud).";
  }

  feature extranet-vpn {
    description
      "Indicates support of extranet VPNs. That is,
       the capability of a VPN to access a list of
       other VPNs.";
  }

  feature carrierscarrier {
    description
      "Indicates support of Carrier-of-Carrier VPNs.";
    reference
      "Section 9 of RFC 4364";
  }

  /* 
   * Address family related identities
   */

  identity address-family {
    description
      "Defines a type for the address family.";
  }

  identity ipv4 {
    if-feature "ipv4";
    base address-family;
    description
      "Identity for IPv4 address family.";
  }

  identity ipv6 {
    if-feature "ipv6";
    base address-family;
    description
      "Identity for IPv6 address family.";
  }

  /* 
   * Identities related to VPN topology
   */

  identity vpn-topology {
    description
      "Base identity of the VPN topology.";
  }

  identity any-to-any {
    base vpn-topology;
    description
      "Identity for any-to-any VPN topology.";
  }

  identity hub-spoke {
    base vpn-topology;
    description
      "Identity for Hub-and-Spoke VPN topology.";
  }

  identity hub-spoke-disjoint {
    base vpn-topology;
    description
      "Identity for Hub-and-Spoke VPN topology
       where Hubs cannot communicate with each other.";
  }

  identity custom {
    base vpn-topology;
    description
      "Identity for custom VPN topologies where the
       role of the nodes is not strictly hub or spoke.
       VPN topology controlled by the import/export
       policies. The custom topology reflects more complex
       VPN nodes such as VPN node that acts as Hub for
       certain nodes and Spoke to others.";
  }

  /* 
   * Identities related to network access types
   */

  identity site-network-access-type {
    description
      "Base identity for site-network-access type.";
  }

  identity point-to-point {
    base site-network-access-type;
    description
      "Identity for point-to-point connections.";
  }

  identity multipoint {
    base site-network-access-type;
    description
      "Identity for multipoint connections, e.g.,
       Ethernet broadcast segment.";
  }

  identity irb {
    base site-network-access-type;
    description
      "Integrated Routing Bridge (IRB).
       Identity for pseudowire connections.";
  }

  identity loopback {
    base site-network-access-type;
    description
      "Identity for loopback connections.";
  }

  /* 
   * Identities related to operational and administrative status 
   */

  identity operational-status {
    description
      "Base identity for the operational status.";
  }

  identity operational-state-up {
    base operational-status;
    description
      "Operational status is UP/Enabled.";
  }

  identity operational-state-down {
    base operational-status;
    description
      "Operational status is DOWN/Disabled.";
  }

  identity operational-state-unknown {
    base operational-status;
    description
      "Operational status is UNKNOWN.";
  }

  identity administrative-status {
    description
      "Base identity for administrative status.";
  }

  identity administrative-state-up {
    base administrative-status;
    description
      "Administrative status is UP/Enabled.";
  }

  identity administrative-state-down {
    base administrative-status;
    description
      "Administrative status is DOWN/Disabled.";
  }

  identity administrative-state-testing {
    base administrative-status;
    description
      "Administrative status is up for testing purposes.";
  }

  identity administrative-state-pre-deployment {
    base administrative-status;
    description
      "Administrative status is pre-deployment phase.
       That is prior to the actual deployment of a service.";
  }

  /* 
   * Identities related to site or node role
   */

  identity role {
    description
      "Base identity of a site or a node role.";
  }

  identity any-to-any-role {
    base role;
    description
      "Identity of any-to-any IP VPN.";
  }

  identity spoke-role {
    base role;
    description
      "A node or a site is acting as a Spoke IP VPN.";
  }

  identity hub-role {
    base role;
    description
      "A node or a site isacting as a Hub IP VPN.";
  }

  identity custom-role {
    base role;
    description
      "VPN-Node with custom or complex role in the VPN.
       For certain sources/destinations,  it can behave
       as a hub but for others it can act as a spoke
       depending on the configured policy.";
  }

  /* 
   * Identities related to VPN service constraints
   */

  identity placement-diversity {
    description
      "Base identity for access placement constraints.";
  }

  identity bearer-diverse {
    base placement-diversity;
    description
      "Identity for bearer diversity.

       The bearers should not use common elements.";
  }

  identity pe-diverse {
    base placement-diversity;
    description
      "Identity for PE diversity.";
  }

  identity pop-diverse {
    base placement-diversity;
    description
      "Identity for Point Of Presence (POP) diversity.";
  }

  identity linecard-diverse {
    base placement-diversity;
    description
      "Identity for linecard diversity.";
  }

  identity same-pe {
    base placement-diversity;
    description
      "Identity for having sites connected on the same PE.";
  }

  identity same-bearer {
    base placement-diversity;
    description
      "Identity for having sites connected using the same bearer.";
  }

  /* 
   * Identities related to service types 
   */

  identity service-type {
    description
      "Identity of service type.";
  }

  identity l3vpn {
    base service-type;
    description
      "Identity for L3VPN service.";
  }

  identity vpls {
    base service-type;
    description
      "Identity for the VPLS service type.";
    reference
      "RFC 4761: Virtual Private LAN Service (VPLS) Using
                 BGP for Auto-Discovery and Signaling
       RFC 4762: Virtual Private LAN Service (VPLS) Using
                 Label Distribution Protocol (LDP) Signaling";
  }

  identity vpws-evpn {
    base service-type;
    description
      "Identity for the Point-to-point Virtual Private
       Wire Service (VPWS) service type.";
    reference
      "RFC8214: Virtual Private Wire Service Support in
                Ethernet VPN";
  }

  identity pbb-evpn {
    base service-type;
    description
      "Identity for Provider Backbone Bridging (PBB) EVPNs.";
    reference
      "RFC 7623: Provider Backbone Bridging Combined
                 with Ethernet VPN (PBB-EVPN)";
  }

  identity mpls-evpn {
    base service-type;
    description
      "Identity for MPLS based EVPNs.";
    reference
      "RFC 7432: BGP MPLS-Based Ethernet VPN";
  }

  identity vxlan-evpn {
    base service-type;
    description
      "Identity for VXLAN based EVPNs.";
    reference
      "RFC 8365: A Network Virtualization Overlay Solution
                 Using Ethernet VPN (EVPN)";
  }

  /* 
   * Identities related to VPN signaling type
   */

  identity vpn-signaling-type {
    description
      "Identity for VPN signaling types";
  }

  identity bgp-signaling {
    base vpn-signaling-type;
    description
      "Identity for Layer 2 VPNs using BGP";
    reference
      "RFC 6624: Layer 2 Virtual Private Networks Using BGP for
                 Auto-Discovery and Signaling
       RFC 7432: BGP MPLS-Based Ethernet VPN";
  }

  identity ldp-signaling {
    base vpn-signaling-type;
    description
      "Identity for Targeted Label Distribution Protocol.";
    reference
      "RFC 5036: LDP Specification";
  }

  identity l2tp-signaling {
    base vpn-signaling-type;
    description
      "Identity for Layer Two Tunneling Protocol (L2TP).";
    reference
      "RFC3931: Layer Two Tunneling Protocol - Version 3 (L2TPv3)";
  }

  /*  
   * Identities related to routing protocols
   */

  identity routing-protocol-type {
    description
      "Base identity for routing protocol type.";
  }

  identity ospf {
    if-feature "rtg-ospf";
    base routing-protocol-type;
    description
      "Identity for OSPF routing protocol type.";
  }

  identity bgp {
    if-feature "rtg-bgp";
    base routing-protocol-type;
    description
      "Identity for BGP routing protocol type.";
  }

  identity static {
    base routing-protocol-type;
    description
      "Identity for static routing protocol type.";
  }

  identity rip {
    if-feature "rtg-rip";
    base routing-protocol-type;
    description
      "Identity for RIP routing protocol type.";
  }

  identity isis {
    if-feature "rtg-isis";
    base routing-protocol-type;
    description
      "Identity for IS-IS routing protocol type.";
  }

  identity vrrp {
    if-feature "rtg-vrrp";
    base routing-protocol-type;
    description
      "Identity for VRRP protocol type.

       This is to be used when LANs are directly connected
       to PEs.";
  }

  identity direct {
    base routing-protocol-type;
    description
      "Identity for direct routing protocol type.

       This is to be used when LANs are directly connected
       to PEs and and must be advertised in the VPN.";
  }

  identity isis-level {
    if-feature "rtg-isis";
    description
      "Identity for the IS-IS level.";
  }

  identity level1 {
    base isis-level;
    description
      "Identity for IS-IS level 1.";
  }

  identity level2 {
    base isis-level;
    description
      "Identity for IS-IS level 2.";
  }

  identity level1-2 {
    base isis-level;
    description
      "Identity for IS-IS levels 1 and 2.";
  }

  /* 
   * Identities related to Routes Import and Export
   */

  identity ie-type {
    description
      "Identity for Import-Export routing profiles.
       Those profiles can be reused between VPN nodes.";
  }

  identity import {
    base ie-type;
    description
      "Identity for 'import' routing profile.";
  }

  identity export {
    base ie-type;
    description
      "Identity for 'export' routing profile.";
  }

  identity import-export {
    base ie-type;
    description
      "Identity for 'import/export' routing profile.";
  }

  /* 
   * Identities related to bandwidth and QoS 
   */

  identity bw-direction {
    description
      "Identity for the bandwidth direction.";
  }

  identity input-bw {
    if-feature "input-bw";
    base bw-direction;
    description
      "Identity for the input bandwidth.";
  }

  identity output-bw {
    if-feature "output-bw";
    base bw-direction;
    description
      "Identity for the output bandwidth.";
  }

  identity bw-type {
    description
      "Identity of the bandwidth type.";
  }

  identity bw-per-cos {
    if-feature "qos";
    base bw-type;
    description
      "The bandwidth is per CoS.";
  }

  identity bw-per-port {
    base bw-type;
    description
      "The bandwidth is per site network access.";
  }

  identity bw-per-site {
    base bw-type;
    description
      "The bandwidth is per site. It is applicable to
       all the site network accesses within a site.";
  }

  identity bw-per-svc {
    base bw-type;
    description
      "The bandwidth is per VPN service.";
  }

  identity qos-profile-direction {
    if-feature "qos";
    description
      "Base identity for the QoS profile direction.";
  }

  identity site-to-wan {
    base qos-profile-direction;
    description
      "Identity for Site-to-WAN direction.";
  }

  identity wan-to-site {
    base qos-profile-direction;
    description
      "Identity for WAN-to-Site direction.";
  }

  identity both {
    base qos-profile-direction;
    description
      "Identity for both WAN-to-Site and Site-to-WAN
       directions.";
  }

  /*
   *  Identities related to protocol types. These types are typically
   *  used to identify the underlay transport. 
   */

  identity protocol-type {
    description
      "Base identity for Protocol Type.";
  }

  identity ip-in-ip {
    base protocol-type;
    description
      "Transport is based on IP-in-IP.";
    reference
      "RFC 2003: IP Encapsulation within IP
       RFC 2473: Generic Packet Tunneling in IPv6 Specification";
  }

  identity ip-in-ipv4 {
    base ip-in-ip;
    description
      "Transport is based on IP over IPv4.";
    reference
      "RFC 2003: IP Encapsulation within IP";
  }

  identity ip-in-ipv6 {
    base ip-in-ip;
    description
      "Transport is based on IP over IPv6.";
    reference
      "RFC 2473: Generic Packet Tunneling in IPv6 Specification";
  }

  identity gre {
    base protocol-type;
    description
      "Transport is based on Generic Routing Encapsulation (GRE).";
    reference
      "RFC 1701: Generic Routing Encapsulation (GRE)
       RFC 1702: Generic Routing Encapsulation over IPv4 networks
       RFC 7676: IPv6 Support for Generic Routing Encapsulation
                 (GRE)";
  }

  identity gre-v4 {
    base gre;
    description
      "Transport is based on GRE over IPv4.";
    reference
      "RFC 1702: Generic Routing Encapsulation over IPv4 networks";
  }

  identity gre-v6 {
    base gre;
    description
      "Transport is based on GRE over IPv6.";
    reference
      "RFC 7676: IPv6 Support for Generic Routing Encapsulation
                 (GRE)";
  }

  identity vxlan-trans {
    base protocol-type;
    description
      "Transport is based on VxLAN.";
    reference
      "RFC 7348: Virtual eXtensible Local Area  Network (VXLAN):
                 A Framework for Overlaying Virtualized Layer 2
                 Networks over Layer 3 Networks";
  }

  identity geneve {
    base protocol-type;
    description
      "Transport is based on Generic Network Virtualization
       Encapsulation (GENEVE).";
    reference
      "RFC 8926: Geneve: Generic Network Virtualization
                 Encapsulation";
  }

  identity ldp {
    base protocol-type;
    description
      "Transport is based on LDP.";
    reference
      "RFC 5086: LDP Specification";
  }

  identity mpls-in-udp {
    base protocol-type;
    description
      "Transport is MPLS in UDP.";
    reference
      "RFC 7510: Encapsulating MPLS in UDP";
  }

  identity sr {
    base protocol-type;
    description
      "Transport is based on Segment Routing (SR).";
    reference
      "RFC 8660: Segment Routing with the MPLS Data Plane
       RFC 8663: MPLS Segment Routing over IP
       RFC 8754: IPv6 Segment Routing Header (SRH)";
  }

  identity sr-mpls {
    base sr;
    description
      "Transport is based on SR with MPLS.";
    reference
      "RFC 8660: Segment Routing with the MPLS Data Plane";
  }

  identity srv6 {
    base sr;
    description
      "Transport is based on SR over IPv6.";
    reference
      "RFC 8663: MPLS Segment Routing over IP
       RFC 8754: IPv6 Segment Routing Header (SRH)";
  }

  identity sr-te {
    base protocol-type;
    description
      "Transport is based on SR-TE.";
    reference
      "RFC 8426: Recommendations for RSVP-TE and Segment Routing (SR)
                 Label Switched Path (LSP) Coexistence";
  }

  identity rsvp-te {
    base protocol-type;
    description
      "Transport is based on RSVP-TE.";
    reference
      "RFC 3209: RSVP-TE: Extensions to RSVP for LSP Tunnels";
  }

  identity bgp-lu {
    base protocol-type;
    description
      "Transport is based on BGP-LU.";
    reference
      "RFC 8277: Using BGP to Bind MPLS Labels to Address
                 Prefixes";
  }

  identity unknown {
    base protocol-type;
    description
      "Not known protocol type.";
  }

  /* 
   * Identities related to encapsulations
   */

  identity encapsulation-type {
    description
      "Base identity for the encapsulation type.";
  }

  identity priority-tagged {
    base encapsulation-type;
    description
      "Identity for the priority-tagged interface.";
  }

  identity dot1q {
    if-feature "dot1q";
    base encapsulation-type;
    description
      "Identity for the support of the 'dot1q'
       encapsulation.";
  }

  identity qinq {
    if-feature "qinq";
    base encapsulation-type;
    description
      "Identity for the support of the 'qinq'
       encapsulation.";
  }

  identity qinany {
    if-feature "qinany";
    base encapsulation-type;
    description
      "Identity for the support of the 'qinany'
       encapsulation.";
  }

  identity vxlan {
    if-feature "vxlan";
    base encapsulation-type;
    description
      "Identity for the support of the 'vxlan'
       encapsulation.";
  }

  identity ethernet-type {
    base encapsulation-type;
    description
      "Identity of the Ethernet encapsulation type.";
  }

  identity vlan-type {
    base encapsulation-type;
    description
      "Identity of the VLAN encapsulation.";
  }

  identity untagged-int {
    base encapsulation-type;
    description
      "Identity of the untagged interface type.";
  }

  identity tagged-int {
    base encapsulation-type;
    description
      "Identity of the tagged interface type.";
  }

  identity lag-int {
    if-feature "lag-interface";
    base encapsulation-type;
    description
      "Identity of the LAG interface type.";
    reference
      "IEEE Std. 802.1AX: Link Aggregation";
  }

  /* 
   * Identities related to VLAN Tag
   */

  identity tag-type {
    description
      "Base identity of the tag types.";
  }

  identity c-vlan {
    base tag-type;
    description
      "Indicates Customer VLAN (C-VLAN) tag, normally
       using the 0x8100 Ethertype.";
  }

  identity s-vlan {
    base tag-type;
    description
      "Indicates Service VLAN (S-VLAN) tag.";
  }

  identity c-s-vlan {
    base tag-type;
    description
      "Uses both a C-VLAN tag and a S-VLAN tag.";
  }

  /* 
   * Identities related to VXLAN
   */

  identity vxlan-peer-mode {
    if-feature "vxlan";
    description
      "Base identity for the VXLAN peer mode.";
  }

  identity static-mode {
    base vxlan-peer-mode;
    description
      "Identity for VXLAN access in the static mode.";
  }

  identity bgp-mode {
    base vxlan-peer-mode;
    description
      "Identity for VXLAN access by BGP EVPN learning.";
  }

  /* 
   * Identities related to multicast
   */

  identity multicast-gp-address-mapping {
    if-feature "multicast";
    description
      "Identity for multicast group mapping type.";
  }

  identity static-mapping {
    base multicast-gp-address-mapping;
    description
      "Identity for static mapping, i.e., attach the interface
       to the multicast group as a static member.";
  }

  identity dynamic-mapping {
    base multicast-gp-address-mapping;
    description
      "Identity for dynamic mapping, i.e., an interface is added
       to the multicast group as a result of snooping.";
  }

  identity multicast-tree-type {
    if-feature "multicast";
    description
      "Base identity for multicast tree type.";
  }

  identity ssm-tree-type {
    base multicast-tree-type;
    description
      "Identity for Source-Specific Multicast (SSM) tree type.";
  }

  identity asm-tree-type {
    base multicast-tree-type;
    description
      "Identity for Any-Source Multicast (ASM) tree type.";
  }

  identity bidir-tree-type {
    base multicast-tree-type;
    description
      "Identity for bidirectional tree type.";
  }

  identity multicast-rp-discovery-type {
    if-feature "multicast";
    description
      "Base identity for Rendezvous Point (RP) discovery type.";
  }

  identity auto-rp {
    base multicast-rp-discovery-type;
    description
      "Base identity for Auto-RP discovery type.";
  }

  identity static-rp {
    base multicast-rp-discovery-type;
    description
      "Base identity for static type.";
  }

  identity bsr-rp {
    base multicast-rp-discovery-type;
    description
      "Base identity for Bootstrap Router (BSR) discovery type.";
  }

  /* 
   * Identities related to traffic types
   */

  identity tf-type {
    description
      "Identity for the traffic type.";
  }

  identity multicast-traffic {
    if-feature "multicast";
    base tf-type;
    description
      "Identity for multicast traffic.";
  }

  identity broadcast-traffic {
    base tf-type;
    description
      "Identity for broadcast traffic.";
  }

  identity unknown-unicast-traffic {
    base tf-type;
    description
      "Identity for unknown unicast traffic.";
  }

  /* 
   * Identities related to customer applications
   */

  identity customer-application {
    description
      "Base identity for customer applications.";
  }

  identity web {
    base customer-application;
    description
      "Identity for a Web application (e.g., HTTP, HTTPS).";
  }

  identity mail {
    base customer-application;
    description
      "Identity for a mail application.";
  }

  identity file-transfer {
    base customer-application;
    description
      "Identity for a file transfer application
       (e.g., FTP, SFTP).";
  }

  identity database {
    base customer-application;
    description
      "Identity for a database application.";
  }

  identity social {
    base customer-application;
    description
      "Identity for a social-network application.";
  }

  identity games {
    base customer-application;
    description
      "Identity for a gaming application.";
  }

  identity p2p {
    base customer-application;
    description
      "Identity for a peer-to-peer application.";
  }

  identity network-management {
    base customer-application;
    description
      "Identity for a management application
       (e.g., Telnet, syslog, SNMP).";
  }

  identity voice {
    base customer-application;
    description
      "Identity for a voice application.";
  }

  identity video {
    base customer-application;
    description
      "Identity for a video conference application.";
  }

  identity embb {
    base customer-application;
    description
      "Identity for an enhanced Mobile Broadband (eMBB)
       application.  Note that an eMBB application demands
       network performance with a wide variety of
       characteristics, such as data rate, latency,
       loss rate, reliability, and many other parameters.";
  }

  identity urllc {
    base customer-application;
    description
      "Identity for an Ultra-Reliable and Low Latency
       Communications (URLLC) application.  Note that a
       URLLC application demands network performance
       with a wide variety of characteristics, such as latency,
       reliability, and many other parameters.";
  }

  identity mmtc {
    base customer-application;
    description
      "Identity for a massive Machine Type
       Communications (mMTC) application.  Note that an
       mMTC application demands network performance
       with a wide variety of characteristics, such as data
       rate, latency, loss rate, reliability, and many
       other parameters.";
  }

  /* 
   * Identities related to service bundling
   */

  identity bundling-type {
    description
      "The base identity for the bundling type. It supports
       a subset or all CE-VLANs associated with an L2VPN
       service.";
  }

  identity multi-svc-bundling {
    base bundling-type;
    description
      "Identity for multi-service bundling, i.e.,
       multiple C-VLAN IDs can be associated with an
       L2VPN service at a site.";
  }

  identity one2one-bundling {
    base bundling-type;
    description
      "Identity for one-to-one service bundling, i.e.,
       each L2VPN can be associated with only one C-VLAN ID
       at a site.";
  }

  identity all2one-bundling {
    base bundling-type;
    description
      "Identity for all-to-one bundling, i.e., all C-VLAN IDs
       are mapped to one L2VPN service.";
  }

  /* 
   * Identities related to Ethernet Services 
   */

  identity control-mode {
    description
      "Defines the type of control mode on Layer 2 Control Protocol
       (L2CP).";
  }

  identity peer {
    base control-mode;
    description
      "'peer' mode, i.e., participate in the protocol towards
       the CE.  Peering is common for Link Aggregation Control
       Protocol (LACP) and the Ethernet Local Management Interface
       (E-LMI) and, occasionally, for Link Layer Discovery Protocol
       (LLDP).  For VPLSs and VPWSs, the subscriber can also
       request that the peer service provider enables spanning tree.";
  }

  identity tunnel {
    base control-mode;
    description
      "'tunnel' mode, i.e., pass to the egress or destination
       site.  For  Ethernet Private Lines (EPLs), the
       expectation is that L2CP frames are tunnelled.";
  }

  identity discard {
    base control-mode;
    description
      "Identity for 'discard' mode, i.e., discard the frame.";
  }

  identity neg-mode {
    description
      "Identity for the negotiation mode.";
  }

  identity full-duplex {
    base neg-mode;
    description
      "Identity for the full-duplex mode.";
  }

  identity auto-neg {
    base neg-mode;
    description
      "Identity for auto-negotiation mode.";
  }

  /******** Collection of VPN-related Types & Identities ********/

  typedef vpn-id {
    type string;
    description
      "Defines an identifier that is used as
       a service identifier, for example.";
  }

  /* 
   * Types related to Ethernet Services 
   */

  typedef ccm-priority-type {
    type uint8 {
      range "0..7";
    }
    description
      "A 3-bit priority value to be used in the VLAN tag,
       if present in the transmitted frame.";
  }

  /******* VPN-related reusable groupings *******/

  grouping vpn-description {
    description
      "Provides common VPN information.";
    leaf vpn-id {
      type vpn-id;
      description
        "VPN identifier.
         This identifier has a local meaning.";
    }
    leaf vpn-name {
      type string;
      description
        "A name used to refer to the VPN.";
    }
    leaf vpn-description {
      type string;
      description
        "Textual description of a VPN service.";
    }
    leaf customer-name {
      type string;
      description
        "Name of the customer that actually uses the VPN service.";
    }
  }

  grouping vpn-profile-cfg {
    description
      "Grouping for VPN Profile configuration.";
    container valid-provider-identifiers {
      description
        "Container for valid provider profile identifiers.";
      list external-connectivity-identifier {
        if-feature "external-connectivity";
        key "id";
        description
          "List for profile identifiers that uniquely identify
           profiles governing how external connectivity is
           provided to a VPN. A profile indicates the type of
           external connectivity (Internet, cloud, etc.), the
           sites/nodes that are associated with a connectivity
           profile, etc. A profile can also indicate filtering
           rules and/or address translation rules. Such features
           may involve PE, P, or dedicated nodes as a function of
           the deployment.";
        leaf id {
          type string;
          description
            "Identification of an external connectivity profile.
             Local administration meaning.";
        }
      }
      list encryption-profile-identifier {
        key "id";
        description
          "List for encryption profile identifiers.";
        leaf id {
          type string;
          description
            "Identification of the encryption profile
             to be used.  Local administration meaning.";
        }
      }
      list qos-profile-identifier {
        key "id";
        description
          "List for QoS Profile Identifiers.";
        leaf id {
          type string;
          description
            "Identification of the QoS profile to be used.
             Local administration meaning.";
        }
      }
      list bfd-profile-identifier {
        key "id";
        description
          "List for BFD profile identifiers.";
        leaf id {
          type string;
          description
            "Identification of the BFD profile to be used.
             This identifier has a aocal administration meaning.";
        }
      }
      list forwarding-profile-identifier {
        key "id";
        description
          "List for forwarding profile identifiers.";
        leaf id {
          type string;
          description
            "Identification of the Forwrding Profile Filter to be used.
             Local administration meaning.";
        }
      }
      list routing-profile-identifier {
        key "id";
        description
          "List for Routing Profile Identifiers.";
        leaf id {
          type string;
          description
            "Identification of the routing Profile to be used
             by the routing-protocols within sites, vpn-
             network-accesses or vpn-nodes for refering
             vrf-import/export policies.

             This identifier has a local meaning.";
        }
      }
      nacm:default-deny-write;
    }
  }

  grouping status-timestamp {
    description
      "This grouping defines some operational
       parameters for the service.";
    leaf status {
      type identityref {
        base operational-status;
      }
      config false;
      description
        "Operations status.";
    }
    leaf last-updated {
      type yang:date-and-time;
      config false;
      description
        "Indicates the actual date and time of the service
         status change.";
    }
  }

  grouping service-status {
    description
      "Service status grouping.";
    container status {
      description
        "Service status.";
      container admin-status {
        description
          "Administrative service status.";
        leaf status {
          type identityref {
            base administrative-status;
          }
          description
            "Administrative service status.";
        }
        leaf last-updated {
          type yang:date-and-time;
          description
            "Indicates the actual date and time of the service
             status change.";
        }
      }
      container oper-status {
        description
          "Operational service status.";
        uses status-timestamp;
      }
    }
  }

  grouping svc-transport-encapsulation {
    description
      "This grouping defines the type of underlay transport
       for the VPN service.";
    container underlay-transport {
      description
        "Container for the transport underlay.";
      leaf-list type {
        type identityref {
          base protocol-type;
        }
        ordered-by user;
        description
          "Protocols used to deliver a VPN service.";
      }
    }
  }

  grouping rt-rd {
    description
      "Grouping for route target (RT) and route 
       distinguisher (RD).";
    choice rd-choice {
      description
        "Route distinguisher choice between several options
         on providing the route distiniguisher value.";
      case directly-assigned {
        description
          "Explicitly assign an RD value.";
        leaf rd {
          type rt-types:route-distinguisher;
          description
            "Explicitly assign an RD value.";
        }
      }
      case pool-assigned {
        leaf rd-pool-name {
          type string;
          description
            "The server will auto-assign a route
             distinguisher value and use that value operationally.
             The assignment will be selected from the pool
             identified by the rd-pool-name.";
        }
        leaf rd-from-pool {
          type rt-types:route-distinguisher;
          config false;
          description
            "The RD assigned from the pool name.";
        }
      }
      case full-autoasigned {
        leaf auto {
          type empty;
          description
            "Indicates an RD is fully auto assigned.";
        }
        leaf rd-auto {
          type rt-types:route-distinguisher;
          config false;
          description
            "Auto assigned RD.";
        }
      }
      case no-rd {
        description
          "Use the empty type to indicate RD has no value and
           is not to be auto-assigned.";
        leaf no-rd {
          type empty;
          description
            "No RD is assigned.";
        }
      }
    }
    container vpn-targets {
      description
        "Set of route targets to match for import and export routes
         to/from VRF.";
      uses vpn-route-targets;
    }
  }

  grouping vpn-route-targets {
    description
      "A grouping that specifies Route Target import-export rules
       used in a BGP-enabled VPN.";
    reference
      "RFC 4364: BGP/MPLS IP Virtual Private Networks (VPNs)
       RFC 4664: Framework for Layer 2 Virtual Private Networks
                 (L2VPNs)";
    list vpn-target {
      key "id";
      description
        "Route targets. AND/OR operations are available
         based on the RTs assigment.";
      leaf id {
        type int8;
        description
          "Identifies each VPN Target.";
      }
      list route-targets {
        key "route-target";
        description
          "List of RTs.";
        leaf route-target {
          type rt-types:route-target;
          description
            "Conveys an RT value.";
        }
      }
      leaf route-target-type {
        type rt-types:route-target-type;
        mandatory true;
        description
          "Import/export type of the RT.";
      }
    }
    container vpn-policies {
      description
        "VPN policies.";
      leaf import-policy {
        type string;
        description
          "Defines the 'import' policy.";
      }
      leaf export-policy {
        type string;
        description
          "Defines the 'export' policy.";
      }
    }
  }

  grouping vpn-components-group {
    description
      "Grouping definition to assign
       group-ids to associate VPN nodes, sites,
       or network accesses.";
    container groups {
      description
        "Lists the groups to which a VPN node,
         a site, or a network access belongs to.";
      list group {
        key "group-id";
        description
          "List of group-ids.";
        leaf group-id {
          type string;
          description
            "Is the group-id to which a VPN node,
             a site, or a network access belongs to.";
        }
      }
    }
  }

  grouping placement-constraints {
    description
      "Constraints for placing a network access.";
    list constraint {
      key "constraint-type";
      description
        "List of constraints.";
      leaf constraint-type {
        type identityref {
          base placement-diversity;
        }
        description
          "Diversity constraint type.";
      }
      container target {
        description
          "The constraint will apply against
           this list of groups.";
        choice target-flavor {
          description
            "Choice for the group definition.";
          case id {
            list group {
              key "group-id";
              description
                "List of groups.";
              leaf group-id {
                type string;
                description
                  "The constraint will apply against this
                   particular group-id.";
              }
            }
          }
          case all-accesses {
            leaf all-other-accesses {
              type empty;
              description
                "The constraint will apply against all other
                  network accesses of a site.";
            }
          }
          case all-groups {
            leaf all-other-groups {
              type empty;
              description
                "The constraint will apply against all other groups
                 that the customer is managing.";
            }
          }
        }
      }
    }
  }

  grouping ports {
    description
      "Choice of specifying a source or destination port numbers.";
    choice source-port {
      description
        "Choice of specifying the source port or referring to
         a group of source port numbers.";
      container source-port-range-or-operator {
        description
          "Source port definition.";
        uses packet-fields:port-range-or-operator;
      }
    }
    choice destination-port {
      description
        "Choice of specifying a destination port or referring
         to a group of destination port numbers.";
      container destination-port-range-or-operator {
        description
          "Destination port definition.";
        uses packet-fields:port-range-or-operator;
      }
    }
  }

  grouping qos-classification-policy {
    description
      "Configuration of the traffic classification
       policy.";
    list rule {
      key "id";
      ordered-by user;
      description
        "List of marking rules.";
      leaf id {
        type string;
        description
          "A description identifying the
           qos-classification-policy rule.";
      }
      choice match-type {
        default "match-flow";
        description
          "Choice for classification.";
        case match-flow {
          choice l3 {
            description
              "Either IPv4 or IPv6.";
            container ipv4 {
              description
                "Rule set that matches IPv4 header.";
              uses packet-fields:acl-ip-header-fields;
              uses packet-fields:acl-ipv4-header-fields;
            }
            container ipv6 {
              description
                "Rule set that matches IPv6 header.";
              uses packet-fields:acl-ip-header-fields;
              uses packet-fields:acl-ipv6-header-fields;
            }
          }
          choice l4 {
            description
              "Can be TCP or UDP.";
            container tcp {
              description
                "Rule set that matches TCP header.";
              uses packet-fields:acl-tcp-header-fields;
              uses ports;
            }
            container udp {
              description
                "Rule set that matches UDP header.";
              uses packet-fields:acl-udp-header-fields;
              uses ports;
            }
          }
        }
        case match-application {
          leaf match-application {
            type identityref {
              base customer-application;
            }
            description
              "Defines the application to match.";
          }
        }
      }
      leaf target-class-id {
        if-feature "qos";
        type string;
        description
          "Identification of the class of service.
           This identifier is internal to the
           administration.";
      }
    }
  }
}
<CODE ENDS>]]></artwork>
        </figure></t>
    </section>

    <section anchor="Security" title="Security Considerations">
      <t>The YANG modules specified in this document define schemas for data
      that is designed to be accessed via network management protocols such as
      NETCONF <xref target="RFC6241"></xref> or RESTCONF <xref
      target="RFC8040"></xref>. The lowest NETCONF layer is the secure
      transport layer, and the mandatory-to-implement secure transport is
      Secure Shell (SSH) <xref target="RFC6242"></xref>. The lowest RESTCONF
      layer is HTTPS, and the mandatory-to-implement secure transport is TLS
      [RFC8446].</t>

      <t>The Network Configuration Access Control Model (NACM) <xref
      target="RFC8341"></xref> provides the means to restrict access for
      particular NETCONF or RESTCONF users to a preconfigured subset of all
      available NETCONF or RESTCONF protocol operations and content.</t>

      <t>The "ietf-vpn-common" module defines a set of identities, types, and
      groupings. These nodes are intended to be reused by other YANG modules.
      As such, the module does not expose by itself any data nodes which are
      writable, contain read-only state, or RPCs. As such, there are no
      additional security issues to be considered relating to the
      "ietf-vpn-common" module.</t>
    </section>

    <section anchor="IANA" title="IANA Considerations">
      <t>This document requests IANA to register the following URI in the "ns"
      subregistry within the "IETF XML Registry" <xref
      target="RFC3688"></xref>:</t>

      <t><figure>
          <artwork><![CDATA[      URI: urn:ietf:params:xml:ns:yang:ietf-vpn-common
      Registrant Contact: The IESG.
      XML: N/A; the requested URI is an XML namespace.]]></artwork>
        </figure></t>

      <t>This document requests IANA to register the following YANG module in
      the "YANG Module Names" subregistry <xref target="RFC6020"></xref>
      within the "YANG Parameters" registry.</t>

      <t><figure>
          <artwork><![CDATA[      name: ietf-vpn-common
      namespace: urn:ietf:params:xml:ns:yang:ietf-vpn-common
      maintained by IANA: N
      prefix: vpn-common
      reference: RFC XXXX]]></artwork>
        </figure></t>
    </section>

    <section anchor="ack" title="Acknowledgements">
      <t>Many thanks to Radek Krej&#269;&iacute; for the yangdoctors
      review.</t>
    </section>

    <section title="Contributors">
      <t><figure>
          <artwork><![CDATA[   Italo Busi
   Huawei Technologies
   Email: Italo.Busi@huawei.com

   Luis Angel Munoz
   Vodafone
   Email: luis-angel.munoz@vodafone.com

   Victor Lopez Alvarez
   Telefonica
   Email: victor.lopezalvarez@telefonica.com]]></artwork>
        </figure></t>
    </section>
  </middle>

  <!--  *****BACK MATTER ***** -->

  <back>
    <references title="Normative References">
      <?rfc include='reference.RFC.6991'?>

      <?rfc include='reference.RFC.3688'?>

      <?rfc include='reference.RFC.6020'?>

      <?rfc include='reference.RFC.7950'?>

      <?rfc include='reference.RFC.6241'?>

      <?rfc include='reference.RFC.8040'?>

      <?rfc include='reference.RFC.6242'?>

      <?rfc include='reference.RFC.8446'?>

      <?rfc include='reference.RFC.8341'?>

      <?rfc include='reference.RFC.8294'?>

      <?rfc include='reference.RFC.8519'?>
    </references>

    <references title="Informative References">
      <?rfc include='reference.RFC.8340'?>

      <?rfc include='reference.RFC.8512'?>

      <?rfc include='reference.I-D.ietf-opsawg-l3sm-l3nm'?>

      <?rfc include='reference.I-D.ietf-opsawg-l2nm'?>

      <?rfc include='reference.RFC.8299'?>

      <?rfc include='reference.RFC.8466'?>

      <?rfc include='reference.RFC.7348'?>

      <?rfc include='reference.RFC.6513'?>

      <?rfc include='reference.RFC.4364'?>

      <?rfc include='reference.RFC.4577'?>

      <?rfc include='reference.RFC.5880'?>

      <?rfc include='reference.RFC.1701'?>

      <?rfc include='reference.RFC.1702'?>

      <?rfc include='reference.RFC.7676'?>

      <?rfc include='reference.RFC.8660'?>

      <?rfc include='reference.RFC.8663'?>

      <?rfc include='reference.RFC.8754'?>

      <?rfc include='reference.RFC.8426'?>

      <?rfc include='reference.RFC.8277'?>

      <?rfc include='reference.RFC.6624'?>

      <?rfc include='reference.RFC.7432'?>

      <?rfc include='reference.RFC.5036'?>

      <?rfc include='reference.RFC.4762'?>

      <?rfc include='reference.RFC.4761'?>

      <?rfc include='reference.RFC.8214'?>

      <?rfc include='reference.RFC.7623'?>

      <?rfc include='reference.RFC.4664'?>

      <?rfc include='reference.RFC.8365'?>

      <?rfc include='reference.RFC.3931'?>

      <?rfc include='reference.RFC.2003'?>

      <?rfc include='reference.RFC.2473'?>

      <?rfc include='reference.RFC.8926'?>

      <?rfc include='reference.RFC.7510'?>

      <?rfc include='reference.RFC.3209'?>
    </references>
  </back>
</rfc>
